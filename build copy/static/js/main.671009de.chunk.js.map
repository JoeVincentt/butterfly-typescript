{"version":3,"sources":["images/logo_horizontal.png","images/companybar_background.jpeg","images/logoFull.webp","images/pre-subscription.webp","Components/ScrollToTheTop.js","Components/Buttons/GradientButton.js","constants/colors.js","Components/Navbar/MenuDrawer.js","Components/Navbar/Navbar.js","Components/Footer/Footer.js","constants/shadows.js","Components/Forms/ProfileForm/ProfileForm.js","Components/JobDescriptionPage/CompanyInfoCard.js","MockUpData/jobs.js","Components/JobDescriptionPage/JobDescriptionPage.js","Components/Auth/SignIn/SignIn.js","Components/utils/regex.js","Components/Auth/SignUp/SignUp.js","Components/Forms/PostJobFormGroup/FormComponents/JobDescription.js","Components/Forms/PostJobFormGroup/FormComponents/AdvertisementPlan.js","Components/Forms/PostJobFormGroup/FormComponents/Payment.js","Components/JobCard/JobCard.js","Components/Forms/PostJobFormGroup/FormComponents/CustomStepper.js","Components/Forms/PostJobFormGroup/FormComponents/ThankYouCard.js","Components/Forms/PostJobFormGroup/PostJobForm.js","Components/JobsFeed/JobsFeed.js","Components/CompanyBar/CompanyBar.js","Components/Dashboard/JobSearchDashboard.js","Components/Dashboard/HiringDashboard.js","Components/Dashboard/Dashboard.js","Components/Pre-subscription/Policies.js","Components/Pre-subscription/Subscribe.js","Components/NoMatch.js","Components/Content.js","App.js","serviceWorker.js","firebaseConfig.js","index.js","images/logo.png","images/signUpInBackground.jpeg"],"names":["module","exports","makeStyles","theme","root","position","bottom","spacing","right","useStyles","button","background","Button","onClick","text","labelName","size","classes","Fab","color","variant","aria-label","className","id","toUpperCase","list","width","fullList","categoryIcon","marginRight","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","logoImg","margin","height","nested","paddingLeft","withRouter","setDrawerOpen","drawerOpen","history","React","useState","open","setOpen","navigateTo","path","push","Drawer","onClose","alt","src","logo","List","Divider","ListItem","onKeyDown","ListItemIcon","ListItemText","primary","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","component","disablePadding","role","categoryList","map","category","index","key","renderCategoryList","appBar","boxShadow","title","flexGrow","marginLeft","loginButton","colors","backgroundColor","menuButton","postJobButton","withWidth","props","loggedIn","AppBar","elevation","Toolbar","IconButton","edge","to","Hidden","xsDown","paper","padding","textAlign","palette","secondary","footer","fontFamily","marginTop","minHeight","shadows","formControl","minWidth","selectEmpty","dragAndDropContainer","marginBottom","dragAndDropPaper","border","uploadIcon","purpleText","textDecoration","paddingTop","paddingBottom","bigAvatar","cursor","icon","CompanyInfoCard","location","company","companyId","logoImage","altLogoText","Paper","Grid","container","direction","justify","alignItems","item","xs","alignContent","Typography","console","log","jobs","description","highlights","about","responsibilities","educationAndExperience","skills","benefits","date","highlightPaper","listTitle","job","setJob","loading","setLoading","useEffect","match","params","a","forEach","getAJobFromTheList","renderListProperty","args","name","length","listItem","sm","md","lg","highlight","disableRipple","image","backgroundImage","signInImageBackground","backgroundRepeat","backgroundSize","backgroundPosition","shadowPaper","display","flexDirection","form","textField","submit","setIsSignedIn","zoomIn","setZoomIn","unregisterAuthObserver","firebase","auth","onAuthStateChanged","user","uiConfig","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","callbacks","signInSuccessWithAuthResult","currentUser","Zoom","style","transitionDelay","noValidate","TextField","required","fullWidth","label","autoComplete","autoFocus","type","firebaseAuth","emailRegex","mediumStrengthPasswordRegex","signUpImageBackground","errorMessage","db","firestore","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","passwordConfirmation","setPasswordConfirmation","subscribeEmail","setSubscribeEmail","emailInvalid","setEmailInvalid","passwordIsTooWeak","setPasswordIsTooWeak","passwordDoesNotMatch","setPasswordDoesNotMatch","signInError","setSignInError","setSignInErrorCode","signInErrorMessage","setSignInErrorMessage","signUpError","setSignUpError","setSignUpErrorCode","signUpErrorMessage","setSignUpErrorMessage","formValidation","validateEmail","test","toLowerCase","validatePasswordStrength","trim","passwordConfirmationMatch","validFirstName","validLastName","signIn","signInWithEmailAndPassword","then","createDatabaseInstanceOfTheUser","catch","error","code","message","uid","collection","doc","set","createNewUserWithEmailAndPassword","createUserWithEmailAndPassword","value","onChange","e","target","handleFirstNameChange","handleLastNameChange","handleEmailChange","handlePasswordChange","handlePasswordConfirmationChange","FormControlLabel","control","Checkbox","checked","checkBox","renderSingUpError","renderSingInError","renderInvalidEmailError","renderPasswordIsTooWeakError","renderPasswordConfirmationNotMatchError","containerForDynamicFields","marginHorizontal","maxWidth","addNRemoveButtons","fieldNameContainer","addAndRemoveButtonsContainer","addFieldButton","borderRadius","paperActive","transform","textPlanName","textPlanNameContainer","checkIcon","offersContainer","injectStripe","setErrorMessage","onSubmit","evt","preventDefault","stripe","createToken","handleResult","base","letterSpacing","invalid","withStyles","alternativeLabel","top","left","active","borderColor","completed","line","borderTopWidth","StepConnector","circle","zIndex","stepper","alignSelf","thankYouText","backButton","nextOrFinishButton","instructions","buttonContainer","extendedIconRightMargin","extendedIconLeftMargin","jobTitle","cardInfoBody","detailsButton","applyButton","navigateToJobDetails","smUp","featuredText","sortBy","setSortBy","FormControl","InputLabel","htmlFor","Select","native","autoWidth","event","inputProps","pathname","state","innerBox","createData","jobId","appliedFor","dateApplied","status","rowName","paddingRight","main","lighten","light","dark","flex","table","tableWrapper","overflowX","visuallyHidden","clip","overflow","resumeChecked","resumeUnchecked","hoverRow","candidateName","contactNumber","Policies","handleClose","descriptionElementRef","useRef","descriptionElement","current","focus","Dialog","scroll","aria-labelledby","aria-describedby","DialogTitle","DialogContent","dividers","DialogContentText","ref","tabIndex","DialogActions","captionCommentThankYou","captionCommentInvalidEmail","subscribeBoxField","subscribersAmountBoxField","subscribersAmountText","dialogButton","hyperlink","Subscribe","amountOfSubscriptions","setAmountOfSubscriptions","invalidEmail","setInvalidEmail","subscribedSuccessfully","setSubscribedSuccessfully","openDialog","setOpenDialog","openPolicy","setOpenPolicy","handleClickOpenPolicy","handleClosePolicy","checkIfAgreedToPolicy","getAmountOfSubscriptions","agreed","localStorage","getItem","get","exists","data","numberOfSubscriptions","handleCloseDialog","setItem","Fragment","Helmet","charSet","content","rel","href","Box","Grow","handleChange","increment","FieldValue","update","subscribe","CircularProgress","toString","align","Link","Date","getFullYear","NoMatch","Container","scrollToTheTop","Content","createMuiTheme","purple","danger","orange","responsiveFontSizes","App","ThemeProvider","Boolean","window","hostname","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","analytics","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.671009de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_horizontal.13c9cb69.png\";","module.exports = __webpack_public_path__ + \"static/media/companybar_background.870a1f9c.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/logoFull.546fb50c.webp\";","module.exports = __webpack_public_path__ + \"static/media/pre-subscription.76147900.webp\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nconst ScrollToTheTop = props => {\n  const { children, window } = props;\n  const classes = useStyles();\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100\n  });\n\n  const handleClick = event => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      \"#back-to-top-anchor\"\n    );\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        {children}\n      </div>\n    </Zoom>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2)\n  }\n}));\n\nexport default ScrollToTheTop;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\n\nimport \"./GradientButton.css\";\n\nconst Button = ({ onClick, text, labelName, size }) => {\n  const classes = useStyles();\n\n  return (\n    <Fab\n      onClick={() => onClick()}\n      color=\"primary\"\n      variant=\"extended\"\n      size={size}\n      aria-label={labelName}\n      className={classes.button}\n      id=\"gradientButton\"\n    >\n      {text.toUpperCase()}\n    </Fab>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    background: `linear-gradient(to bottom, #8e24aa, #333399)`\n  }\n}));\n\nexport default Button;\n","export default {\n  purple: \"#8a24aa\",\n  pink: \"#ac00d5\",\n  pinkLight: \"#ec407a\",\n  grey: \"#f4f4f4\",\n  mediumGrey: \"#bdbdbd\",\n  darkGrey: \"#616161\",\n  blue: \"#333399\"\n};\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport CategoryIcon from \"@material-ui/icons/Category\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport SpeedIcon from \"@material-ui/icons/Speed\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { Divider, Collapse } from \"@material-ui/core\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\nimport logo from \"../../images/logo.png\";\n\nconst MenuDrawer = ({ setDrawerOpen, drawerOpen, history }) => {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  const categoryList = [\n    \"Programming\",\n    \"Design\",\n    \"Copywriting\",\n    \"DevOps & Sysadmin\",\n    \"Business & Management\",\n    \"Product\",\n    \"Customer Support\",\n    \"Finance and Legal\",\n    \"Sales and Marketing\",\n    \"Contract\",\n    \"All Other\"\n  ];\n\n  const navigateTo = path => {\n    setDrawerOpen(false);\n    history.push(`/${path}`);\n  };\n\n  const renderCategoryList = categoryList =>\n    categoryList.map((category, index) => (\n      <div\n        key={index}\n        className={classes.list}\n        role=\"presentation\"\n        onClick={() => setDrawerOpen(false)}\n        onKeyDown={() => setDrawerOpen(false)}\n      >\n        <ListItem button key={index}>\n          <ListItemText primary={category} />\n        </ListItem>\n      </div>\n    ));\n\n  return (\n    <Drawer open={drawerOpen} onClose={() => setDrawerOpen(false)}>\n      <img className={classes.logoImg} alt=\"Butterfly remote\" src={logo}></img>\n      <List>\n        <Divider />\n\n        <ListItem\n          button\n          onClick={() => navigateTo(\"profile\")}\n          onKeyDown={() => navigateTo(\"profile\")}\n        >\n          <ListItemIcon>\n            <PersonIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Profile\" />\n        </ListItem>\n\n        <ListItem\n          button\n          onClick={() => navigateTo(\"dashboard\")}\n          onKeyDown={() => navigateTo(\"dashboard\")}\n        >\n          <ListItemIcon>\n            <SpeedIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Dashboard\" />\n        </ListItem>\n\n        <ListItem button onClick={handleClick}>\n          <ListItemIcon>\n            <CategoryIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Categories\" />\n          {open ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            <ListItem button className={classes.nested}>\n              <div className={classes.list} role=\"presentation\">\n                <List>{renderCategoryList(categoryList)}</List>\n              </div>{\" \"}\n            </ListItem>\n          </List>\n        </Collapse>\n        <Divider />\n        <ListItem\n          button\n          onClick={() => setDrawerOpen(false)}\n          onKeyDown={() => setDrawerOpen(false)}\n        >\n          <ListItemIcon>\n            <ExitToAppIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Log Out\" />\n        </ListItem>\n      </List>\n    </Drawer>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: \"auto\"\n  },\n  categoryIcon: {\n    marginRight: 10\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  },\n  logoImg: {\n    margin: theme.spacing(3),\n    width: 150,\n    height: \"auto\"\n  },\n  nested: {\n    paddingLeft: theme.spacing(4)\n  }\n}));\n\nexport default withRouter(MenuDrawer);\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport Fab from \"@material-ui/core/Fab\";\nimport GradientButton from \"../Buttons/GradientButton\";\n\nimport logo from \"../../images/logo_horizontal.png\";\n\nimport colors from \"../../constants/colors\";\n\nimport MenuDrawer from \"./MenuDrawer\";\n\nconst Navbar = props => {\n  const classes = useStyles();\n\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\n  const [loggedIn, setLogIn] = React.useState(false);\n\n  const navigateToPostJobScreen = () => props.history.push(\"/post-a-job\");\n\n  const navigateToLoginScreen = () => props.history.push(\"/sign-in\");\n\n  return (\n    <div>\n      <MenuDrawer drawerOpen={drawerOpen} setDrawerOpen={setDrawerOpen} />\n      <AppBar position=\"fixed\" elevation={1} className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={() => {\n              setDrawerOpen(true);\n            }}\n          >\n            <MenuIcon />\n          </IconButton>\n\n          <div className={classes.title}>\n            <Link to=\"/\">\n              <img\n                alt=\"ButterflyRemoteJobsLogo\"\n                src={logo}\n                className={classes.logo}\n              />\n            </Link>\n          </div>\n\n          <Hidden xsDown>\n            <GradientButton\n              onClick={navigateToPostJobScreen}\n              size=\"medium\"\n              labelName=\"postAJob\"\n              text=\"Post A Job\"\n            />\n\n            {!loggedIn && (\n              <Fab\n                onClick={() => navigateToLoginScreen()}\n                color=\"inherit\"\n                variant=\"extended\"\n                size=\"medium\"\n                aria-label=\"login\"\n                className={classes.loginButton}\n              >\n                Login\n              </Fab>\n            )}\n          </Hidden>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  // root: {\n  //   flexGrow: 1\n  // },\n  appBar: {\n    background: \"#ffffff\",\n    boxShadow: \"0 0 10px 0px rgba(107, 19, 107, 0.2)\"\n  },\n\n  title: {\n    flexGrow: 1\n  },\n  logo: {\n    marginLeft: theme.spacing(2),\n    height: \"auto\",\n    width: 180\n  },\n  loginButton: {\n    margin: theme.spacing(1),\n    color: colors.purple,\n    backgroundColor: colors.grey\n  },\n  menuButton: {\n    color: colors.purple\n  },\n  postJobButton: {\n    margin: theme.spacing(1),\n    background: `linear-gradient(to bottom, #8e24aa, #333399)`\n  }\n}));\n\nNavbar.propTypes = {\n  width: PropTypes.oneOf([\"lg\", \"md\", \"sm\", \"xl\", \"xs\"]).isRequired\n};\n\nexport default withRouter(withWidth()(Navbar));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Typography, Box } from \"@material-ui/core\";\n\nconst Footer = () => {\n  const classes = useStyles();\n\n  return (\n    <footer className={classes.footer}>\n      <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\">\n        <Grid item>\n          <div className={classes.paper}>Contact Us</div>\n        </Grid>\n        <Grid item>\n          <div className={classes.paper}>|</div>\n        </Grid>\n\n        <Grid item>\n          <div className={classes.paper}>Terms and Conditions</div>\n        </Grid>\n\n        <Grid item>\n          <div className={classes.paper}>|</div>\n        </Grid>\n\n        <Grid item>\n          <div className={classes.paper}>Privacy Policy</div>\n        </Grid>\n      </Grid>\n\n      <Box mt={1} mb={2}>\n        <Copyright />\n      </Box>\n    </footer>\n  );\n};\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"#\">\n        Butterfly Jobs\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"} All rights Reserved\n    </Typography>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(1, 1),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n\n  footer: {\n    fontFamily: \"Helvetica Neue, Helvetica\",\n    padding: theme.spacing(1),\n    marginTop: \"auto\"\n    // boxShadow: \"0 0 10px 0px rgba(107, 19, 107, 0.2)\"\n  }\n}));\n\nexport default Footer;\n","export default {\n  purpleShadow: \"0 0 10px 0px rgba(107, 19, 107, 0.3)\"\n};\n","import React from \"react\";\nimport { Grid, Paper, Typography, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport CloudUploadOutlinedIcon from \"@material-ui/icons/CloudUploadOutlined\";\nimport { useDropzone } from \"react-dropzone\";\n\nimport GradientButton from \"../../Buttons/GradientButton\";\n\nimport shadows from \"../../../constants/shadows\";\n\nimport listOfCountries from \"./FormComponents/ListOfCountries\";\nimport listOfCurrentCareerLevel from \"./FormComponents/ListOfCurrentCareerLevel\";\nimport colors from \"../../../constants/colors\";\n\nconst ProfileForm = () => {\n  const classes = useStyles();\n  const [firstName, setFirstName] = React.useState(\"\");\n  const [lastName, setLastName] = React.useState(\"\");\n  const [country, setCountry] = React.useState(\"\");\n  const [zipCode, setZipCode] = React.useState(\"\");\n  const [currentCareerLevel, setCurrentCareerLevel] = React.useState(\"\");\n\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n\n  //DropZone Parameters\n  const {\n    acceptedFiles,\n    rejectedFiles,\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: \"application/pdf\"\n  });\n\n  const acceptedFilesItems = acceptedFiles.map(file => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n    </li>\n  ));\n  // const rejectedFilesItems = rejectedFiles.map(file => (\n  //   <li key={file.path}>\n  //     {file.path} - {file.size} bytes\n  //   </li>\n  // ));\n\n  const handleChange = (event, param) => {\n    switch (param) {\n      case \"firstName\":\n        setFirstName(event.target.value);\n        break;\n      case \"lastName\":\n        setLastName(event.target.value);\n        break;\n      case \"country\":\n        setCountry(event.target.value);\n        break;\n      case \"zipCode\":\n        setZipCode(event.target.value);\n        break;\n      case \"currentCareerLevel\":\n        setCurrentCareerLevel(event.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignContent=\"center\"\n      className={classes.root}\n    >\n      <Grid item xs={12} sm={10} md={8}>\n        <Paper className={classes.paper}>\n          <Grid container spacing={2} justify=\"center\" alignContent=\"center\">\n            <Grid item xs={12}>\n              <Typography className={classes.title} variant=\"h4\">\n                Account Information\n              </Typography>\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <Grid container spacing={3}>\n                {/* First Name */}\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    id=\"firstName\"\n                    className={classes.textField}\n                    label=\"First Name\"\n                    variant=\"standard\"\n                    value={firstName}\n                    fullWidth\n                    onChange={e => handleChange(e, \"firstName\")}\n                  />\n                </Grid>\n                {/* Last Name */}\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    id=\"lastName\"\n                    className={classes.textField}\n                    label=\"Last Name\"\n                    variant=\"standard\"\n                    value={lastName}\n                    fullWidth\n                    onChange={e => handleChange(e, \"lastName\")}\n                  />\n                </Grid>\n\n                {/* Country*/}\n                <Grid item xs={12} sm={6}>\n                  <FormControl\n                    variant=\"standard\"\n                    className={classes.formControl}\n                  >\n                    <InputLabel ref={inputLabel} id=\"country-input-label\">\n                      Country\n                    </InputLabel>\n                    <Select\n                      labelId=\"country-select-label\"\n                      id=\"country\"\n                      value={country}\n                      onChange={e => handleChange(e, \"country\")}\n                      labelWidth={labelWidth}\n                    >\n                      <MenuItem value=\"\">\n                        <em>None</em>\n                      </MenuItem>\n                      {listOfCountries.map((country, index) => (\n                        <MenuItem key={index} value={country}>\n                          {country}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n                {/* Zip Code */}\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    id=\"zipCode\"\n                    className={classes.textField}\n                    label=\"Zip Code\"\n                    variant=\"standard\"\n                    type=\"number\"\n                    value={zipCode}\n                    onChange={e => handleChange(e, \"zipCode\")}\n                    fullWidth\n                  />\n                </Grid>\n\n                {/* Current Career Level */}\n                <Grid item xs={12}>\n                  <FormControl\n                    variant=\"standard\"\n                    className={classes.formControl}\n                  >\n                    <InputLabel\n                      ref={inputLabel}\n                      id=\"currentCareerLevel-input-label\"\n                    >\n                      Current Career Level\n                    </InputLabel>\n                    <Select\n                      labelId=\"currentCareerLevel-select-label\"\n                      id=\"currentCareerLevel\"\n                      value={currentCareerLevel}\n                      onChange={e => handleChange(e, \"currentCareerLevel\")}\n                      labelWidth={labelWidth}\n                    >\n                      <MenuItem value=\"\">\n                        <em>None</em>\n                      </MenuItem>\n                      {listOfCurrentCareerLevel.map((level, index) => (\n                        <MenuItem key={index} value={level}>\n                          {level}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n\n                {/* Resume */}\n                <Grid item xs={12} className={classes.dragAndDropContainer}>\n                  <Paper elevation={0} className={classes.dragAndDropPaper}>\n                    <Grid\n                      container\n                      direction=\"column\"\n                      justify=\"center\"\n                      alignContent=\"center\"\n                    >\n                      <Grid\n                        container\n                        direction=\"column\"\n                        justify=\"center\"\n                        alignContent=\"center\"\n                        {...getRootProps({ className: \"dropzone\" })}\n                      >\n                        <Grid item>\n                          <Grid\n                            container\n                            direction=\"column\"\n                            justify=\"center\"\n                            alignContent=\"center\"\n                          >\n                            <input {...getInputProps()} />\n                            <CloudUploadOutlinedIcon\n                              className={classes.uploadIcon}\n                            />\n                          </Grid>\n                        </Grid>\n                        <Grid item>\n                          <Typography\n                            variant=\"h6\"\n                            className={classes.purpleText}\n                          >\n                            Upload Your Resume Here\n                          </Typography>\n                        </Grid>\n                        <Grid item>\n                          {\" \"}\n                          <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                            (Only *.pdf images will be accepted)\n                          </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <ul>{acceptedFilesItems}</ul>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Paper>\n                </Grid>\n\n                {/* Update Profile Button */}\n                <Grid item xs={12}>\n                  <GradientButton\n                    text=\"UPDATE\"\n                    labelName=\"updateProfile\"\n                    size=\"large\"\n                    onClick={() => console.log(\"update\")}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(4, 2),\n    boxShadow: shadows.purpleShadow\n  },\n  formControl: {\n    minWidth: \"100%\"\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  dragAndDropContainer: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(1)\n  },\n  dragAndDropPaper: {\n    border: \"1px solid rgba(107, 19, 107, 0.2)\"\n  },\n  uploadIcon: {\n    fontSize: \"5rem\",\n    color: colors.mediumGrey\n  },\n  purpleText: {\n    color: colors.purple,\n    textDecoration: \"underline\"\n  }\n}));\n\nexport default ProfileForm;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\n\nimport GradientButton from \"../Buttons/GradientButton\";\n\nimport colors from \"../../constants/colors\";\n\nconst CompanyInfoCard = ({\n  location,\n  company,\n  companyId,\n  logoImage,\n  altLogoText\n}) => {\n  const classes = useStyles();\n\n  const renderCardTitleText = () => (\n    <Grid container direction=\"column\" justify=\"center\" alignContent=\"center\">\n      <Typography variant=\"h6\">Company Details</Typography>\n    </Grid>\n  );\n\n  const renderCompanyProfilePicture = () => (\n    <Grid container direction=\"column\" justify=\"center\" alignContent=\"center\">\n      <img alt={altLogoText} src={logoImage} className={classes.bigAvatar} />\n    </Grid>\n  );\n\n  const renderCompanyDetails = () => (\n    <Grid\n      container\n      spacing={2}\n      direction=\"column\"\n      justify=\"center\"\n      alignContent=\"center\"\n    >\n      <Grid item>\n        <Grid container direction=\"row\">\n          <Grid item>\n            <BusinessIcon className={classes.icon} />\n          </Grid>\n          <Grid item>\n            <Typography variant=\"body1\" color=\"textSecondary\">\n              {company}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"row\">\n          <Grid item>\n            <LocationOnIcon className={classes.icon} />\n          </Grid>\n          <Grid item>\n            <Typography variant=\"body1\" color=\"textSecondary\">\n              {location}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Grid container justify=\"center\">\n          <GradientButton\n            text=\"See Profile\"\n            size=\"small\"\n            onClick={() => console.log(\"Company ID is\", companyId)}\n          />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n\n  return (\n    <Paper className={classes.paper}>\n      <Grid\n        container\n        spacing={2}\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={12}>\n          {renderCardTitleText()}\n        </Grid>\n        <Grid item xs={12}>\n          {renderCompanyProfilePicture()}\n        </Grid>\n        <Grid item xs={12}>\n          {renderCompanyDetails()}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    boxShadow: \"none\",\n    border: \"1px solid rgba(107, 19, 107, 0.2)\"\n  },\n  bigAvatar: {\n    margin: theme.spacing(3),\n    boxShadow: \"0px 0px 9px -1px rgba(107,19,107,1)\",\n    cursor: \"pointer\",\n    width: 100,\n    height: 100\n  },\n\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: \"1.1rem\",\n    color: colors.darkGrey\n  }\n}));\n\nexport default CompanyInfoCard;\n","export const jobs = [\n  {\n    id: \"wqw122321452354235341wqwq\",\n    title: \"Remote Contract React Native Engineer\",\n    description: {\n      highlights: [\"programming\", \"canada\", \"contract\"],\n      about:\n        \"The Senior Software Engineer will act as a key innovator and contributor to the ultimate success of our integrated suite of products driving compelling value to our customers.\",\n      responsibilities: [\n        \"Design and build technical solutions\",\n        \"Better those around you by driving team efficiency improvements\",\n        \"mentoring teammates to strengthen individual skills and share your learning\"\n      ],\n      educationAndExperience: [\n        \"Full-stack experience: 5+ years of experience as a software developer, working on both front and back-end features. Emphasis on back-end.\",\n        \" Technical Skills: Proficient in programming languages C#, Java, Python, C++, or similar.\",\n        \"Integration Experience: REST, JSON, SOAP, XML, Swagger, Postman, or similar.\"\n      ],\n      skills: [\"Swift\", \"Flutter\", \"Ionic\", \"React Native or similar.\"],\n      benefits: [\n        \"Healthcare including HMO & PPO options\",\n        \"Fitness Membership reimbursement\",\n        \"401K w/matching\",\n        \"Company Equity\"\n      ]\n    },\n    location: \"Delray Beach, FL\",\n    company: \"Company Inc.\",\n    companyId: \"111111\",\n    logoImage:\n      \"https://upload.wikimedia.org/wikipedia/commons/8/82/Square-logo-white.jpeg\",\n    altLogoText: \"company logo\",\n    date: \"25 OCT\"\n  },\n  {\n    id: \"wqw1122321wqwq\",\n    title: \"Remote Contract React Native Engineer\",\n    description: {\n      highlights: [\"programming\", \"canada\", \"contract\"],\n      about:\n        \"The Senior Software Engineer will act as a key innovator and contributor to the ultimate success of our integrated suite of products driving compelling value to our customers.\",\n      responsibilities: [\n        \"Design and build technical solutions\",\n        \"Better those around you by driving team efficiency improvements\",\n        \"mentoring teammates to strengthen individual skills and share your learning\"\n      ],\n      educationAndExperience: [\n        \"Full-stack experience: 5+ years of experience as a software developer, working on both front and back-end features. Emphasis on back-end.\",\n        \" Technical Skills: Proficient in programming languages C#, Java, Python, C++, or similar.\",\n        \"Integration Experience: REST, JSON, SOAP, XML, Swagger, Postman, or similar.\"\n      ],\n      skills: [\"Swift\", \"Flutter\", \"Ionic\", \"React Native or similar.\"],\n      benefits: [\n        \"Healthcare including HMO & PPO options\",\n        \"Fitness Membership reimbursement\",\n        \"401K w/matching\",\n        \"Company Equity\"\n      ]\n    },\n    location: \"Delray Beach, FL\",\n    company: \"Company Inc.\",\n    companyId: \"111111\",\n    logoImage:\n      \"https://cdn.pixabay.com/photo/2013/02/21/19/12/lumber-84678_1280.jpg\",\n    altLogoText: \"company logo\",\n    date: \"25 OCT\"\n  }\n];\n","import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Typography } from \"@material-ui/core\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\n\nimport colors from \"../../constants/colors\";\n\nimport CompanyInfoCard from \"./CompanyInfoCard\";\n\nimport { jobs } from \"../../MockUpData/jobs\";\n\nconst JobDescriptionPage = props => {\n  const classes = useStyles();\n  const [job, setJob] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    console.log(props.match.params.id);\n\n    //need to fetch job description from the database\n    const getAJobFromTheList = async () => {\n      await jobs.forEach(job => {\n        if (job.id === props.match.params.id) {\n          // console.log(job);\n          setJob(job);\n        }\n      });\n    };\n    getAJobFromTheList();\n    setLoading(false);\n    // code to run on component mount\n  }, []);\n\n  const renderDate = date => (\n    <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\">\n      <Grid item>\n        <AccessTimeIcon className={classes.icon} />\n      </Grid>\n      <Grid item>\n        <Typography variant=\"subtitle2\" className={classes.spacing}>\n          {date}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n\n  const renderJobTitle = title => (\n    <Grid container spacing={2} item xs={12}>\n      <Typography variant=\"h5\" className={classes.spacing}>\n        {title}\n      </Typography>\n    </Grid>\n  );\n\n  const renderJobHighlights = highlights => (\n    <Grid container spacing={2} item xs={12} direction=\"row\">\n      {highlights.map((highlight, index) => (\n        <Fab\n          key={index}\n          disableRipple\n          variant=\"extended\"\n          size=\"medium\"\n          color=\"primary\"\n          aria-label=\"highlight\"\n          className={classes.highlightPaper}\n        >\n          {highlight.toUpperCase()}\n        </Fab>\n      ))}\n    </Grid>\n  );\n\n  const renderJobAbout = about => (\n    <Grid container spacing={2} item xs={12}>\n      <Typography variant=\"subtitle1\" className={classes.spacing}>\n        {about}\n      </Typography>{\" \"}\n    </Grid>\n  );\n\n  const renderListProperty = (args, name) => {\n    if (args.length > 0) {\n      return (\n        <Grid container spacing={2} item xs={12} direction=\"column\">\n          <Typography className={classes.listTitle}>{name}</Typography>\n          <ul>\n            {args.map((item, index) => (\n              <li key={index} className={classes.listItem}>\n                {item}\n              </li>\n            ))}\n          </ul>\n        </Grid>\n      );\n    } else {\n      return;\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      {loading ? (\n        <div>loading</div>\n      ) : (\n        <Grid container justify=\"center\" alignContent=\"center\">\n          {/* Company Card */}\n          <Grid item xs={12} sm={4} md={2}>\n            <CompanyInfoCard\n              location={job.location}\n              company={job.company}\n              companyId={job.companyId}\n              logoImage={job.logoImage}\n              altLogoText={job.altLogoText}\n            />\n          </Grid>\n\n          {/* Basic Info */}\n          <Grid item xs={12} sm={8} md={10} lg={8}>\n            <Paper className={classes.paper}>\n              {renderDate(job.date)}\n              {renderJobTitle(job.title)}\n              {renderJobAbout(job.description.about)}\n              {renderJobHighlights(job.description.highlights)}\n              {renderListProperty(\n                job.description.responsibilities,\n                \"Responsibilities\"\n              )}\n              {renderListProperty(\n                job.description.educationAndExperience,\n                \"Education and Experience\"\n              )}\n              {renderListProperty(job.description.skills, \"Skills\")}\n              {renderListProperty(job.description.benefits, \"Benefits\")}\n            </Paper>\n          </Grid>\n        </Grid>\n      )}\n    </div>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(4),\n    margin: theme.spacing(1),\n    color: theme.palette.text.secondary,\n    boxShadow: \"0 0 10px 0px rgba(107, 19, 107, 0.2)\"\n  },\n  highlightPaper: {\n    padding: theme.spacing(10),\n    margin: theme.spacing(2),\n    marginLeft: theme.spacing(0),\n    textAlign: \"center\",\n    color: colors.purple,\n    boxShadow: \"none\",\n    backgroundColor: \"rgba(107, 19, 107, 0.1)\",\n    \"&:hover\": {\n      cursor: \"auto\",\n      backgroundColor: \"rgba(107, 19, 107, 0.1)\"\n    },\n    \"&:active\": {\n      boxShadow: \"0 0 10px 0px rgba(107, 19, 107, 0.1)\"\n    }\n  },\n  spacing: {\n    margin: theme.spacing(1)\n  },\n  listTitle: {\n    margin: theme.spacing(1),\n    fontSize: \"1rem\",\n    fontWeight: 500,\n    marginBottom: -10\n  },\n  icon: {\n    marginTop: 5,\n    fontSize: \"1.1rem\",\n    color: colors.darkGrey\n  }\n}));\n\nexport default withRouter(JobDescriptionPage);\n","import React from \"react\";\nimport firebase from \"firebase/app\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport GradientButton from \"../../Buttons/GradientButton\";\nimport logo from \"../../../images/logo.png\";\nimport \"./SignIn.css\";\n\nimport signInImageBackground from \"../../../images/signUpInBackground.jpeg\";\n\nconst SignIn = props => {\n  const classes = useStyles();\n  const [isSignedIn, setIsSignedIn] = React.useState(false);\n  const [zoomIn, setZoomIn] = React.useState(false);\n\n  React.useEffect(() => {\n    setZoomIn(true);\n    const unregisterAuthObserver = firebase\n      .auth()\n      .onAuthStateChanged(user => setIsSignedIn(!!user));\n\n    return () => {\n      unregisterAuthObserver();\n      setZoomIn(false);\n    };\n  }, []);\n\n  const uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: \"popup\",\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n    signInSuccessUrl: \"/\",\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID\n    ],\n    callbacks: {\n      // Avoid redirects after sign-in.\n      signInSuccessWithAuthResult: () => {\n        console.log(firebase.auth().currentUser);\n        props.history.push(\"/\");\n      }\n    }\n  };\n\n  return (\n    <Grid className={classes.image}>\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Zoom in={zoomIn} style={{ transitionDelay: zoomIn ? \"100ms\" : \"0ms\" }}>\n          <Grid item xs={12}>\n            <div className={classes.shadowPaper}>\n              <img src={logo} alt=\"logo\" className={classes.logo} />\n              <Typography component=\"h1\" variant=\"h6\">\n                Sign In\n              </Typography>\n              <form className={classes.form} noValidate>\n                <TextField\n                  className={classes.textField}\n                  variant=\"standard\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  autoFocus\n                />\n                <TextField\n                  className={classes.textField}\n                  variant=\"standard\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                />\n                <Grid item className={classes.submit}>\n                  <GradientButton\n                    onClick={() => console.log(\"submit\")}\n                    text=\"Login\"\n                    labelName=\"loginButton\"\n                    size=\"large\"\n                  />\n                </Grid>\n\n                <StyledFirebaseAuth\n                  uiConfig={uiConfig}\n                  firebaseAuth={firebase.auth()}\n                />\n\n                <Grid container>\n                  <Grid item>\n                    <Link to=\"/sign-up\" style={{ textDecoration: \"none\" }}>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        Don't have an account? Sign Up\n                      </Typography>\n                    </Link>\n                  </Grid>\n                </Grid>\n              </form>\n            </div>\n          </Grid>\n        </Zoom>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  image: {\n    height: \"100vh\",\n    backgroundImage: `url(${signInImageBackground})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    \"@media (max-height: 820px)\": {\n      height: \"auto\"\n    }\n  },\n  shadowPaper: {\n    padding: theme.spacing(4),\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    \"@media (max-width: 960px)\": {\n      margin: theme.spacing(1),\n      marginTop: theme.spacing(5),\n      padding: theme.spacing(2)\n    },\n    backgroundColor: \"rgba(255, 255, 255, 0.7)\",\n    boxShadow: \"0 0 200px 0px rgba(70, 9, 125, 0.33)\"\n  },\n  logo: {\n    width: \"100px\",\n    height: \"auto\",\n    margin: theme.spacing(2)\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  textField: {\n    minWidth: \"100%\"\n  },\n  submit: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nexport default withRouter(SignIn);\n","export const emailRegex = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n\nexport const mediumStrengthPasswordRegex = /^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})/;\n","import React from \"react\";\nimport firebase from \"firebase/app\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { FormControlLabel } from \"@material-ui/core\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nimport GradientButton from \"../../Buttons/GradientButton\";\nimport { emailRegex, mediumStrengthPasswordRegex } from \"../../utils/regex\";\nimport logo from \"../../../images/logo.png\";\n\nimport \"./SignUp.css\";\n\nimport signUpImageBackground from \"../../../images/signUpInBackground.jpeg\";\n\nconst SignUp = props => {\n  const classes = useStyles();\n  const db = firebase.firestore();\n\n  //State components\n  const [zoomIn, setZoomIn] = React.useState(false);\n\n  //State Sets\n  const [firstName, setFirstName] = React.useState(\"John\");\n  const [lastName, setLastName] = React.useState(\"Doe\");\n  const [email, setEmail] = React.useState(\"eugene.bb@hotmail.com\");\n  const [password, setPassword] = React.useState(\"12345a\");\n  const [passwordConfirmation, setPasswordConfirmation] = React.useState(\n    \"12345a\"\n  );\n  const [subscribeEmail, setSubscribeEmail] = React.useState(true);\n\n  //State validation\n  const [emailInvalid, setEmailInvalid] = React.useState(true);\n  const [passwordIsTooWeak, setPasswordIsTooWeak] = React.useState(true);\n  const [passwordDoesNotMatch, setPasswordDoesNotMatch] = React.useState(true);\n  //SignIN Error\n  const [signInError, setSignInError] = React.useState(false);\n  const [signInErrorCode, setSignInErrorCode] = React.useState(\"\");\n  const [signInErrorMessage, setSignInErrorMessage] = React.useState(\"\");\n  //SignUP Error\n  const [signUpError, setSignUpError] = React.useState(false);\n  const [signUpErrorCode, setSignUpErrorCode] = React.useState(\"\");\n  const [signUpErrorMessage, setSignUpErrorMessage] = React.useState(\"\");\n\n  //ComponentDidMount\n  React.useEffect(() => {\n    setZoomIn(true);\n    return () => setZoomIn(false);\n  }, []);\n\n  //Validate form state callback\n  React.useEffect(() => {\n    formValidation();\n  }, [\n    email,\n    password,\n    passwordConfirmation,\n    subscribeEmail,\n    lastName,\n    firstName\n  ]);\n\n  //Change Handlers\n  const handleSubscribeToEmails = () => setSubscribeEmail(!subscribeEmail);\n  const handleFirstNameChange = e => setFirstName(e.target.value);\n  const handleLastNameChange = e => setLastName(e.target.value);\n  const handleEmailChange = e => setEmail(e.target.value);\n  const handlePasswordChange = e => setPassword(e.target.value);\n  const handlePasswordConfirmationChange = e =>\n    setPasswordConfirmation(e.target.value);\n\n  const clearSignUpForm = () => {\n    setSubscribeEmail(true);\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n    setPasswordConfirmation(\"\");\n  };\n\n  const formValidation = () => {\n    //Validate inputs\n    let validateEmail = emailRegex.test(email.toLowerCase());\n    let validatePasswordStrength = mediumStrengthPasswordRegex.test(\n      password.trim()\n    );\n    let passwordConfirmationMatch =\n      password.trim() === passwordConfirmation.trim();\n    let validFirstName = firstName.trim().length > 1;\n    let validLastName = lastName.trim().length > 1;\n\n    //Set Validation state\n    setEmailInvalid(!validateEmail);\n    setPasswordIsTooWeak(!validatePasswordStrength);\n    setPasswordDoesNotMatch(!passwordConfirmationMatch);\n\n    if (\n      !emailInvalid &&\n      !passwordIsTooWeak &&\n      !passwordDoesNotMatch &&\n      validFirstName &&\n      validLastName\n    ) {\n      // console.log(\"good to go\");\n      return true;\n    } else {\n      // console.log(email, \"email valid\", validateEmail, \"invalid\", emailInvalid);\n      // console.log(\n      //   password,\n      //   \"password strength valid\",\n      //   validatePasswordStrength,\n      //   \"too weak\",\n      //   passwordIsTooWeak\n      // );\n      // console.log(\n      //   passwordConfirmation,\n      //   \"matching\",\n      //   passwordConfirmationMatch,\n      //   \"does NOT match\",\n      //   passwordDoesNotMatch\n      // );\n      return false;\n    }\n  };\n\n  const signUp = () =>\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(() => {\n        setSignUpError(false);\n        signIn();\n      })\n      .catch(error => {\n        // Handle Errors here.\n        setSignUpError(true);\n        setSignUpErrorCode(error.code);\n        setSignUpErrorMessage(error.message);\n      });\n\n  const signIn = () =>\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        setSignInError(false);\n        createDatabaseInstanceOfTheUser();\n        props.history.push(\"/\");\n      })\n      .catch(error => {\n        // Handle Errors here.\n        setSignInError(true);\n        setSignInErrorCode(error.code);\n        setSignInErrorMessage(error.message);\n      });\n\n  const createDatabaseInstanceOfTheUser = async () => {\n    const { uid } = await firebase.auth().currentUser;\n    if (subscribeEmail) {\n      db.collection(\"subscriptions\")\n        .doc(uid)\n        .set({\n          email: email\n        })\n        .catch(error => {});\n    }\n    db.collection(\"users\")\n      .doc(uid)\n      .set({\n        uid: uid,\n        firstName: firstName,\n        lastName: lastName,\n        email: email\n      })\n      .catch(error => {});\n  };\n\n  const createNewUserWithEmailAndPassword = async () => {\n    await signUp();\n    //Clearing Form\n    clearSignUpForm();\n  };\n\n  const handleSubmit = () => {\n    let valid = formValidation();\n    if (valid) {\n      createNewUserWithEmailAndPassword();\n    } else {\n      return;\n    }\n  };\n\n  const renderSingUpError = () => {\n    if (signUpError) {\n      return (\n        <Typography variant=\"caption\" className={classes.errorMessage}>\n          {signUpErrorMessage}\n        </Typography>\n      );\n    }\n  };\n  const renderSingInError = () => {\n    if (signInError) {\n      return (\n        <Typography variant=\"caption\" className={classes.errorMessage}>\n          {signInErrorMessage}\n        </Typography>\n      );\n    }\n  };\n  const renderInvalidEmailError = () => {\n    if (emailInvalid && email.trim().length > 0) {\n      return (\n        <Typography variant=\"caption\" className={classes.errorMessage}>\n          The email address you entered is invalid. Please enter a valid\n          address.\n        </Typography>\n      );\n    }\n  };\n  const renderPasswordIsTooWeakError = () => {\n    if (passwordIsTooWeak && password.trim().length > 0) {\n      return (\n        <Typography variant=\"caption\" className={classes.errorMessage}>\n          The password you entered is too weak. Please choose a stronger\n          password.\n        </Typography>\n      );\n    }\n  };\n  const renderPasswordConfirmationNotMatchError = () => {\n    if (passwordDoesNotMatch) {\n      return (\n        <Typography variant=\"caption\" className={classes.errorMessage}>\n          Passwords does not match. Please match your passwords.\n        </Typography>\n      );\n    }\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.image}>\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Zoom in={zoomIn} style={{ transitionDelay: zoomIn ? \"100ms\" : \"0ms\" }}>\n          <Grid item xs={12}>\n            <div className={classes.shadowPaper}>\n              <img src={logo} alt=\"logo\" className={classes.logo} />\n\n              <Typography component=\"h1\" variant=\"h6\">\n                Sign Up\n              </Typography>\n              <form className={classes.form} noValidate>\n                <Grid container spacing={4} direction=\"row\">\n                  <Grid item xs={6}>\n                    <TextField\n                      className={classes.textField}\n                      variant=\"standard\"\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      id=\"firstName\"\n                      label=\"First Name\"\n                      name=\"firstName\"\n                      autoComplete=\"firstName\"\n                      autoFocus\n                      value={firstName}\n                      onChange={e => handleFirstNameChange(e)}\n                    />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <TextField\n                      className={classes.textField}\n                      variant=\"standard\"\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      id=\"lastName\"\n                      label=\"Last Name\"\n                      name=\"lastName\"\n                      autoComplete=\"lastName\"\n                      autoFocus\n                      value={lastName}\n                      onChange={e => handleLastNameChange(e)}\n                    />\n                  </Grid>\n                </Grid>\n                <TextField\n                  className={classes.textField}\n                  variant=\"standard\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  autoFocus\n                  value={email}\n                  onChange={e => handleEmailChange(e)}\n                />\n                <TextField\n                  className={classes.textField}\n                  variant=\"standard\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  value={password}\n                  onChange={e => handlePasswordChange(e)}\n                />\n                <TextField\n                  className={classes.textField}\n                  variant=\"standard\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"passwordConfirmation\"\n                  label=\"Password Confirmation\"\n                  type=\"password\"\n                  id=\"passwordConfirmation\"\n                  value={passwordConfirmation}\n                  onChange={e => handlePasswordConfirmationChange(e)}\n                />\n                <Grid>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={subscribeEmail}\n                        onChange={() => handleSubscribeToEmails()}\n                        value=\"subscribeEmail\"\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Subscribe for Newsletter\"\n                    className={classes.checkBox}\n                  />\n                </Grid>\n                <Grid container direction=\"column\">\n                  {renderSingUpError()}\n                  {renderSingInError()}\n                  {renderInvalidEmailError()}\n                  {renderPasswordIsTooWeakError()}\n                  {renderPasswordConfirmationNotMatchError()}\n                </Grid>\n\n                <Grid item className={classes.submit}>\n                  <GradientButton\n                    onClick={() => handleSubmit()}\n                    text=\"Register\"\n                    labelName=\"registerButton\"\n                    size=\"large\"\n                  />\n                </Grid>\n                <Grid container>\n                  <Grid item>\n                    <Link to=\"/sign-in\" style={{ textDecoration: \"none\" }}>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        Already have an account? Sign In\n                      </Typography>\n                    </Link>\n                  </Grid>\n                </Grid>\n              </form>\n            </div>\n          </Grid>\n        </Zoom>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  image: {\n    height: \"100vh\",\n    backgroundImage: `url(${signUpImageBackground})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    \"@media (max-height: 820px)\": {\n      height: \"auto\"\n    }\n  },\n  shadowPaper: {\n    padding: theme.spacing(4),\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    \"@media (max-width: 960px)\": {\n      margin: theme.spacing(1),\n      marginTop: theme.spacing(5),\n      padding: theme.spacing(2)\n    },\n    backgroundColor: \"rgba(255, 255, 255, 0.7)\",\n    boxShadow: \"0 0 200px 0px rgba(70, 9, 125, 0.33)\"\n  },\n  textField: {},\n  logo: {\n    width: \"100px\",\n    height: \"auto\",\n    margin: theme.spacing(2)\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2)\n  },\n  errorMessage: {\n    color: \"red\"\n  }\n}));\n\nexport default withRouter(SignUp);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Grid, Paper, Typography, IconButton } from \"@material-ui/core\";\nimport { Add, Remove } from \"@material-ui/icons\";\n\nimport colors from \"../../../../constants/colors\";\nimport shadows from \"../../../../constants/shadows\";\n\nconst JobDescription = () => {\n  const [highlightsFields, setHighlightsFields] = React.useState([\"\"]);\n  const [responsibilityFields, setResponsibilityFields] = React.useState([\"\"]);\n  const [\n    educationAndExperienceFields,\n    setEducationAndExperienceFields\n  ] = React.useState([\"\"]);\n  const [skillsFields, setSkillsFields] = React.useState([\"\"]);\n  const [benefitsFields, setBenefitsFields] = React.useState([\"\"]);\n\n  const classes = useStyles();\n\n  const handleChange = e => {\n    e.preventDefault();\n  };\n\n  const addFieldFunc = (fields, setFunction) => {\n    setFunction([...fields, \"\"]);\n    console.log(fields);\n  };\n\n  const removeFieldFunc = (fields, setFunction, i) => {\n    if (fields.length > 0) {\n      const arr = fields.filter((value, index) => index !== fields.length - 1);\n      setFunction([...arr]);\n    } else {\n      return;\n    }\n  };\n\n  const handleDynamicFieldChange = (e, index, fields, setFunction) => {\n    e.preventDefault();\n    let arr = fields;\n    arr[index] = e.target.value;\n    setFunction([...arr]);\n    console.log(fields);\n  };\n\n  const renderDynamicFieldName = (name, fields, setFunction) => (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"space-between\"\n      alignItems=\"center\"\n      className={classes.fieldNameContainer}\n    >\n      <Grid item>\n        <Typography variant=\"body1\">{name}</Typography>\n      </Grid>\n      <Grid item className={classes.addAndRemoveButtonsContainer}>\n        {/* Render Remove button opnly if there is fields */}\n        {fields.length > 0 && (\n          <IconButton\n            className={classes.addNRemoveButtons}\n            size=\"small\"\n            onClick={() => removeFieldFunc(fields, setFunction)}\n          >\n            <Remove />\n          </IconButton>\n        )}\n\n        <IconButton\n          className={classes.addNRemoveButtons}\n          size=\"medium\"\n          onClick={() => addFieldFunc(fields, setFunction)}\n        >\n          <Add className={classes.addFieldButton} />\n        </IconButton>\n      </Grid>\n    </Grid>\n  );\n\n  const renderDynamicFields = (fields, setFunction) =>\n    fields.map((field, index) => (\n      <Grid\n        key={index}\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        direction=\"row\"\n      >\n        <TextField\n          id={index.toString()}\n          className={classes.textField}\n          margin=\"normal\"\n          variant=\"filled\"\n          fullWidth\n          color=\"primary\"\n          value={fields[index]}\n          onChange={e =>\n            handleDynamicFieldChange(e, index, fields, setFunction)\n          }\n        />\n      </Grid>\n    ));\n\n  return (\n    <Paper className={classes.paper}>\n      <Grid container alignContent=\"center\" justify=\"center\">\n        <TextField\n          id=\"title\"\n          className={classes.textField}\n          label=\"Title\"\n          margin=\"normal\"\n          variant=\"filled\"\n          fullWidth\n          required\n          color=\"primary\"\n        />\n        <TextField\n          id=\"aboutPosition\"\n          className={classes.textField}\n          label=\"About Position\"\n          margin=\"normal\"\n          variant=\"filled\"\n          multiline\n          rows={4}\n          fullWidth\n        />\n        <TextField\n          id=\"companyInformation\"\n          className={classes.textField}\n          label=\"Company Information\"\n          margin=\"normal\"\n          variant=\"filled\"\n          multiline\n          rows={4}\n          fullWidth\n        />\n      </Grid>\n      <Grid\n        container\n        justify=\"center\"\n        alignContent=\"center\"\n        className={classes.containerForDynamicFields}\n      >\n        {/* Job Highlights */}\n        {renderDynamicFieldName(\n          \"Job Highlights\",\n          highlightsFields,\n          setHighlightsFields\n        )}\n        {renderDynamicFields(highlightsFields, setHighlightsFields)}\n\n        {/* Job Responsibilities */}\n        {renderDynamicFieldName(\n          \"Responsibilities\",\n          responsibilityFields,\n          setResponsibilityFields\n        )}\n        {renderDynamicFields(responsibilityFields, setResponsibilityFields)}\n\n        {/* Education and Experience */}\n        {renderDynamicFieldName(\n          \"Education and Experience\",\n          educationAndExperienceFields,\n          setEducationAndExperienceFields\n        )}\n        {renderDynamicFields(\n          educationAndExperienceFields,\n          setEducationAndExperienceFields\n        )}\n\n        {/* Skills */}\n        {renderDynamicFieldName(\"Skills\", skillsFields, setSkillsFields)}\n        {renderDynamicFields(skillsFields, setSkillsFields)}\n\n        {/* Benefits */}\n        {renderDynamicFieldName(\"Benefits\", benefitsFields, setBenefitsFields)}\n        {renderDynamicFields(benefitsFields, setBenefitsFields)}\n      </Grid>\n    </Paper>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    margin: theme.spacing(2),\n    boxShadow: shadows.purpleShadow\n  },\n  containerForDynamicFields: {\n    marginBottom: theme.spacing(6)\n  },\n  textField: {\n    marginHorizontal: theme.spacing(1),\n    maxWidth: \"80%\"\n  },\n  addNRemoveButtons: {\n    margin: theme.spacing(1)\n  },\n  fieldNameContainer: {\n    marginLeft: \"5%\",\n    marginBottom: -20\n  },\n  addAndRemoveButtonsContainer: {\n    marginRight: \"5%\"\n  },\n  addFieldButton: {\n    color: colors.grey,\n    backgroundColor: colors.purple,\n    borderRadius: \"50%\"\n  }\n}));\n\nexport default JobDescription;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Typography, Divider } from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\n\nimport GradientButton from \"../../../Buttons/GradientButton\";\n\nimport \"./AdvertisementPlan.css\";\nimport colors from \"../../../../constants/colors\";\n\nimport { plans } from \"../../../../MockUpData/plans\";\n\nconst AdvertisementPlan = () => {\n  const classes = useStyles();\n\n  const [active, setActive] = React.useState(null);\n\n  const renderPlans = plans => {\n    return plans.map((plan, index) => (\n      <Grid key={index} item xs={12} sm={8} md={4}>\n        <Paper\n          id={active === plan.id ? \"advertisement_plan\" : null}\n          className={active !== plan.id ? classes.paper : classes.paperActive}\n          elevation={0}\n        >\n          <Grid container spacing={2} direction=\"column\">\n            <Grid item className={classes.textPlanNameContainer}>\n              <Typography variant=\"h4\" className={classes.textPlanName}>\n                {plan.planName.toUpperCase()}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignContent=\"flex-start\"\n              >\n                <Grid item>\n                  <Typography color=\"textSecondary\" variant=\"h6\">\n                    $\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <Typography variant=\"h3\">{plan.price}</Typography>\n                </Grid>\n                <Divider />\n                <Grid item>\n                  <Typography color=\"textSecondary\" variant=\"caption\">\n                    / MONTH\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Divider />\n            <Grid item className={classes.offersContainer}>\n              <Grid container spacing={1} direction=\"column\" justify=\"center\">\n                {plan.offers.map((offer, index) => (\n                  <Grid item key={index}>\n                    <Grid\n                      container\n                      spacing={1}\n                      direction=\"row\"\n                      justify=\"center\"\n                    >\n                      <Grid item>\n                        <CheckIcon className={classes.checkIcon} />\n                      </Grid>\n                      <Grid item>\n                        <Typography color=\"textSecondary\" variant=\"body1\">\n                          {offer}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                ))}\n              </Grid>\n            </Grid>\n\n            <Grid item>\n              <GradientButton\n                onClick={() => setActive(plan.id)}\n                labelName=\"advertisementPlan\"\n                text=\"Choose Plan\"\n                size=\"large\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n    ));\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container justify=\"center\">\n        {renderPlans(plans)}\n      </Grid>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  paper: {\n    padding: theme.spacing(1),\n    margin: theme.spacing(1),\n    textAlign: \"center\",\n    border: \"1px solid rgba(107, 19, 107, 0.1)\"\n  },\n  paperActive: {\n    padding: theme.spacing(1),\n    margin: theme.spacing(1),\n    textAlign: \"center\",\n    boxShadow: \"0 0 20px 0px rgba(107, 19, 107, 0.4)\",\n    transform: \"scale(1.02)\"\n  },\n  textPlanName: {\n    color: colors.pinkLight\n  },\n  textPlanNameContainer: {\n    textAlign: \"center\"\n  },\n  checkIcon: {\n    color: colors.pinkLight,\n    fontSize: \"1rem\"\n  },\n  offersContainer: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nexport default AdvertisementPlan;\n","import React from \"react\";\nimport {\n  CardElement,\n  injectStripe,\n  StripeProvider,\n  Elements\n} from \"react-stripe-elements\";\nimport { Grid, Paper, Typography, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport shadows from \"../../../../constants/shadows\";\nimport GradientButton from \"../../../Buttons/GradientButton\";\n\n// You can customize your Elements to give it the look and feel of your site.\nconst createOptions = () => {\n  return {\n    style: {\n      base: {\n        fontSize: \"16px\",\n        color: \"#424770\",\n        fontFamily: \"Roboto, Helvetica, Arial, sans-serif\",\n        letterSpacing: \"0.025em\",\n        \"::placeholder\": {\n          color: \"#aab7c4\"\n        }\n      },\n      invalid: {\n        color: \"#c23d4b\"\n      }\n    }\n  };\n};\n\nconst _CardForm = props => {\n  const classes = useStyles();\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n\n  const handleChange = ({ error }) => {\n    if (error) {\n      setErrorMessage(error.message);\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (props.stripe) {\n      props.stripe.createToken().then(props.handleResult);\n    } else {\n      console.log(\"Stripe.js hasn't loaded yet.\");\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={() => handleSubmit()}>\n        <Grid container direction=\"column\">\n          <Grid item>\n            <Grid container spacing={2} direction=\"row\" justify=\"space-between\">\n              <Grid item xs={6}>\n                <TextField\n                  id=\"firstName\"\n                  className={classes.textField}\n                  label=\"First Name\"\n                  margin=\"normal\"\n                  variant=\"filled\"\n                  fullWidth\n                  required\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  id=\"lastName\"\n                  className={classes.textField}\n                  label=\"Last Name\"\n                  margin=\"normal\"\n                  variant=\"filled\"\n                  fullWidth\n                  required\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <TextField\n              id=\"companyName\"\n              className={classes.textField}\n              label=\"Company Name\"\n              margin=\"normal\"\n              variant=\"filled\"\n              fullWidth\n              required\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              id=\"address\"\n              className={classes.textField}\n              label=\"Address\"\n              margin=\"normal\"\n              variant=\"filled\"\n              fullWidth\n              required\n            />\n          </Grid>\n        </Grid>\n\n        <Grid>\n          <Typography variant=\"h6\" className={classes.spacing}>\n            Card Details\n          </Typography>\n          <CardElement onChange={handleChange} {...createOptions()} />\n          <div className=\"error\" role=\"alert\">\n            {errorMessage}\n          </div>\n        </Grid>\n\n        <Grid container justify=\"space-between\" alignContent=\"center\">\n          <Grid item className={classes.button}>\n            <GradientButton\n              text=\"Submit Payment\"\n              size=\"large\"\n              labelName=\"stripePay\"\n              onClick={() => console.log(\"payment\")}\n            />\n          </Grid>\n          <Grid item className={classes.button}>\n            <Typography variant=\"h6\">Total Price: 290$</Typography>\n          </Grid>\n        </Grid>\n      </form>\n    </div>\n  );\n};\n\nconst CardForm = injectStripe(_CardForm);\n\nconst Payment = props => {\n  const classes = useStyles();\n  return (\n    <Grid container justify=\"center\" alignContent=\"center\">\n      <Grid item xs={12} sm={8}>\n        <Paper className={classes.paper}>\n          <StripeProvider apiKey={\"pk_test_12345\"}>\n            <Elements>\n              <CardForm handleResult={props.handleResult} />\n            </Elements>\n          </StripeProvider>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(1),\n    boxShadow: shadows.purpleShadow\n  },\n\n  button: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4)\n  },\n  spacing: {\n    margin: theme.spacing(4, 0)\n  },\n  textField: {}\n}));\n\nexport default Payment;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport withWidth from \"@material-ui/core/withWidth\";\n\nimport GradientButton from \"../Buttons/GradientButton\";\n\nimport colors from \"../../constants/colors\";\n\nimport \"./Style/Card.css\";\n\nconst JobCard = ({\n  id,\n  title,\n  location,\n  company,\n  companyId,\n  logoImage,\n  altLogoText,\n  date,\n  navigateToJobDetails\n}) => {\n  const classes = useStyles();\n\n  const renderLogoImage = () => (\n    <Grid item xs={6} sm={2}>\n      <img\n        alt={altLogoText}\n        src={logoImage}\n        className={classes.bigAvatar}\n        onClick={() => console.log(\"Company id is \", companyId)}\n      />\n    </Grid>\n  );\n\n  const renderJobTitle = () => (\n    <Grid\n      item\n      xs={10}\n      className={classes.jobTitle}\n      onClick={() => console.log(\"Open job details \", id)}\n    >\n      <Typography variant=\"h6\">{title}</Typography>\n    </Grid>\n  );\n\n  const renderTimePostedSmallScreen = () => (\n    <Hidden smUp>\n      <Grid item xs={6}>\n        <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\">\n          <AccessTimeIcon className={classes.icon} />\n          <Typography variant=\"subtitle2\" style={{ color: \"#616161\" }}>\n            {date}\n          </Typography>\n        </Grid>\n      </Grid>\n    </Hidden>\n  );\n\n  const renderTimePostedMediumAndUpScreen = () => (\n    <Hidden xsDown>\n      <Grid item xs={2}>\n        <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\">\n          <AccessTimeIcon className={classes.icon} />\n          <Typography variant=\"subtitle2\" style={{ color: \"#616161\" }}>\n            {date}\n          </Typography>\n        </Grid>\n      </Grid>\n    </Hidden>\n  );\n\n  const renderCompanyDetails = () => (\n    <Grid spacing={1} container direction=\"row\" justify=\"flex-start\">\n      <Grid item>\n        <Grid container direction=\"row\">\n          <Grid item>\n            <BusinessIcon className={classes.icon} />\n          </Grid>\n          <Grid item>\n            <Typography variant=\"body1\" color=\"textSecondary\">\n              {company}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"row\">\n          <Grid item>\n            <LocationOnIcon className={classes.icon} />\n          </Grid>\n          <Grid item>\n            <Typography variant=\"body1\" color=\"textSecondary\">\n              {location}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n\n  const renderCardButtons = () => (\n    <Grid container direction=\"row\" justify=\"space-between\">\n      <GradientButton\n        onClick={() => console.log(\"1-Click Apply\", id)}\n        text=\"1-Click Apply\"\n        size=\"small\"\n        labelName=\"1clickApply\"\n      />\n      <Fab\n        size=\"small\"\n        variant=\"extended\"\n        aria-label=\"details\"\n        className={classes.detailsButton}\n        onClick={() => {\n          navigateToJobDetails(id);\n        }}\n      >\n        Details\n      </Fab>{\" \"}\n    </Grid>\n  );\n\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={12} sm={10} md={10}>\n        <Paper id=\"job-card\" className={classes.paper} elevation={0}>\n          <Grid container spacing={1}>\n            <Grid container>\n              <Grid container direction=\"row\" justify=\"space-between\">\n                {renderLogoImage()}\n                {renderTimePostedSmallScreen()}\n                <Grid item xs>\n                  <Grid container>\n                    <Grid item xs>\n                      <Grid item>\n                        <Grid\n                          container\n                          justify=\"space-between\"\n                          alignItems=\"center\"\n                        >\n                          {renderJobTitle()}\n                          {renderTimePostedMediumAndUpScreen()}\n                        </Grid>\n                      </Grid>\n                      <Grid\n                        item\n                        xs={12}\n                        sm={10}\n                        md={10}\n                        className={classes.margin}\n                      >\n                        {renderCompanyDetails()}\n                      </Grid>\n                      <Grid item xs={12}>\n                        {renderCardButtons()}\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2, 2),\n    margin: theme.spacing(1),\n    border: \"1px solid rgba(107, 19, 107, 0.2)\"\n  },\n  jobTitle: {\n    cursor: \"pointer\"\n  },\n  bigAvatar: {\n    margin: theme.spacing(3),\n    width: 60,\n    height: 60,\n    boxShadow: \"0px 0px 9px -1px rgba(107,19,107,1)\",\n    cursor: \"pointer\"\n  },\n  icon: {\n    marginRight: 2,\n    fontSize: \"1.1rem\",\n    color: colors.darkGrey\n  },\n  cardInfoBody: {\n    marginBottom: theme.spacing(2),\n    cursor: \"pointer\"\n  },\n  margin: {\n    marginBottom: theme.spacing(2)\n  },\n  detailsButton: {\n    margin: theme.spacing(1),\n    marginRight: 0,\n    color: colors.purple,\n    backgroundColor: colors.grey\n  },\n  applyButton: {\n    margin: theme.spacing(1)\n  }\n}));\n\nJobCard.propTypes = {\n  width: PropTypes.oneOf([\"lg\", \"md\", \"sm\", \"xl\", \"xs\"]).isRequired\n};\n\nexport default withWidth()(JobCard);\n","import React from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Check from \"@material-ui/icons/Check\";\nimport StepConnector from \"@material-ui/core/StepConnector\";\nimport clsx from \"clsx\";\n\nconst CustomStepper = ({ activeStep, steps }) => {\n  const classes = useStyles();\n\n  return (\n    <Stepper\n      className={classes.stepper}\n      alternativeLabel\n      activeStep={activeStep}\n      connector={<QontoConnector />}\n    >\n      {steps.map(label => (\n        <Step key={label}>\n          <StepLabel StepIconComponent={QontoStepIcon}>{label}</StepLabel>\n        </Step>\n      ))}\n    </Stepper>\n  );\n};\n\nconst QontoConnector = withStyles({\n  alternativeLabel: {\n    top: 10,\n    left: \"calc(-50% + 16px)\",\n    right: \"calc(50% + 16px)\"\n  },\n  active: {\n    \"& $line\": {\n      borderColor: \"#8a24ae\"\n    }\n  },\n  completed: {\n    \"& $line\": {\n      borderColor: \"#8a24ae\"\n    }\n  },\n  line: {\n    borderColor: \"#eaeaf0\",\n    borderTopWidth: 3,\n    borderRadius: 1\n  }\n})(StepConnector);\n\nconst useQontoStepIconStyles = makeStyles({\n  root: {\n    color: \"#eaeaf0\",\n    display: \"flex\",\n    height: 22,\n    alignItems: \"center\"\n  },\n  active: {\n    color: \"#8a24ae\"\n  },\n  circle: {\n    width: 8,\n    height: 8,\n    borderRadius: \"50%\",\n    backgroundColor: \"currentColor\"\n  },\n  completed: {\n    color: \"#8a24ae\",\n    zIndex: 1,\n    fontSize: 18\n  }\n});\n\nconst QontoStepIcon = props => {\n  const classes = useQontoStepIconStyles();\n  const { active, completed } = props;\n\n  return (\n    <div\n      className={clsx(classes.root, {\n        [classes.active]: active\n      })}\n    >\n      {completed ? (\n        <Check className={classes.completed} />\n      ) : (\n        <div className={classes.circle} />\n      )}\n    </div>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  stepper: {\n    alignSelf: \"stretch\",\n    backgroundColor: \"inherit\",\n    marginTop: \"5%\"\n  }\n}));\n\nexport default CustomStepper;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Typography, Paper, Button } from \"@material-ui/core\";\nimport colors from \"../../../../constants/colors\";\nimport shadows from \"../../../../constants/shadows\";\nimport GradientButton from \"../../../Buttons/GradientButton\";\n\nconst ThankYouCard = props => {\n  const classes = useStyles();\n\n  return (\n    <Grid container justify=\"center\" alignContent=\"center\">\n      <Grid item xs={12} sm={6}>\n        <Paper className={classes.paper}>\n          <Grid\n            container\n            spacing={2}\n            direction=\"column\"\n            justify=\"center\"\n            alignContent=\"center\"\n          >\n            <Grid item>\n              {\" \"}\n              <Typography variant=\"h3\" className={classes.thankYouText}>\n                Thank You!\n              </Typography>\n            </Grid>\n            <Grid item>\n              {\" \"}\n              <Typography variant=\"h6\">Job Posting Completed</Typography>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                Please check your email for confirmation.\n              </Typography>\n            </Grid>\n            <Grid item>\n              {\" \"}\n              <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                Order Number: 262tyahs12sa\n              </Typography>\n            </Grid>\n            <Grid item className={classes.button}>\n              {\" \"}\n              <GradientButton\n                text=\"Go to dashboard\"\n                labelName=\"goToDash\"\n                size=\"large\"\n                onClick={() => console.log(\"go to dash\")}\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(2),\n    textAlign: \"center\",\n    boxShadow: shadows.purpleShadow\n  },\n  button: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  },\n  spacing: {\n    margin: theme.spacing(4, 0)\n  },\n  thankYouText: {\n    color: colors.pinkLight\n  }\n}));\n\nexport default ThankYouCard;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Fab } from \"@material-ui/core\";\nimport { ArrowForward, ArrowBack } from \"@material-ui/icons\";\n\nimport colors from \"../../../constants/colors\";\n\nimport JobDescription from \"./FormComponents/JobDescription\";\nimport AdvertisementPlan from \"./FormComponents/AdvertisementPlan\";\nimport Payment from \"./FormComponents/Payment\";\nimport PreviewJobPosting from \"./FormComponents/PreviewJobPosting\";\nimport CustomStepper from \"./FormComponents/CustomStepper\";\nimport ThankYouCard from \"./FormComponents/ThankYouCard\";\nimport \"./PostJobForm.css\";\n\nconst getSteps = () => {\n  return [\"Description\", \"Preview\", \"Advertisement Plan\", \"Payment\"];\n};\n\nconst getStepContent = stepIndex => {\n  switch (stepIndex) {\n    case 0:\n      return <JobDescription />;\n    case 1:\n      return <PreviewJobPosting />;\n    case 2:\n      return <AdvertisementPlan />;\n    case 3:\n      return <Payment />;\n    default:\n      return \"Unknown stepIndex\";\n  }\n};\n\nconst PostJobForm = () => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  const renderButtons = () => (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"center\"\n      className={classes.buttonContainer}\n    >\n      <Fab\n        disabled={activeStep === 0}\n        onClick={handleBack}\n        variant=\"extended\"\n        size=\"medium\"\n        aria-label=\"add\"\n        className={classes.backButton}\n      >\n        <ArrowBack className={classes.extendedIconRightMargin} />\n        Back\n      </Fab>\n      <Fab\n        onClick={handleNext}\n        variant=\"extended\"\n        size=\"medium\"\n        className={classes.nextOrFinishButton}\n        aria-label=\"add\"\n      >\n        {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n        <ArrowForward className={classes.extendedIconLeftMargin} />\n      </Fab>\n    </Grid>\n  );\n\n  return (\n    <Grid container direction=\"column\">\n      <CustomStepper activeStep={activeStep} steps={steps} />\n      <div>\n        {activeStep === steps.length ? (\n          <Grid container direction=\"column\">\n            <ThankYouCard handleReset={handleReset} />\n          </Grid>\n        ) : (\n          <Grid container direction=\"column\" alignContent=\"center\">\n            {getStepContent(activeStep)}\n            {renderButtons()}\n          </Grid>\n        )}\n      </div>\n    </Grid>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  backButton: {\n    marginRight: theme.spacing(2),\n    color: colors.purple,\n    backgroundColor: colors.grey\n  },\n  nextOrFinishButton: {\n    marginLeft: theme.spacing(2),\n    color: colors.grey,\n    backgroundColor: colors.purple\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n\n  buttonContainer: {\n    marginTop: theme.spacing(5),\n    marginBottom: theme.spacing(10)\n  },\n  extendedIconRightMargin: {\n    marginRight: theme.spacing(1)\n  },\n  extendedIconLeftMargin: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nexport default PostJobForm;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nimport \"./JobsFeed.css\";\nimport JobCard from \"../JobCard/JobCard\";\n\nconst JobsFeed = ({ jobs, history }) => {\n  const classes = useStyles();\n  const [sortBy, setSortBy] = React.useState(\"\");\n\n  const handleChange = name => event => {\n    setSortBy(event.target.value);\n  };\n\n  const navigateToJobDetails = id => {\n    // console.log(history);\n    // console.log(id);\n    history.push({\n      pathname: `/job-description/${id}`,\n      state: {\n        id\n      }\n    });\n  };\n\n  const renderJobsFeed = () =>\n    jobs.map(\n      (\n        {\n          id,\n          title,\n          location,\n          company,\n          companyId,\n          logoImage,\n          altLogoText,\n          date\n        },\n        index\n      ) => (\n        <JobCard\n          key={id}\n          id={id}\n          title={title}\n          location={location}\n          company={company}\n          companyId={companyId}\n          logoImage={logoImage}\n          altLogoText={altLogoText}\n          date={date}\n          navigateToJobDetails={() => navigateToJobDetails(id)}\n        />\n      )\n    );\n\n  const renderFeaturedSortBar = () => (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"space-between\"\n      alignContent=\"center\"\n    >\n      <Grid item>\n        <Typography className={classes.featuredText} variant=\"h5\">\n          Featured Jobs\n        </Typography>\n      </Grid>\n      <Grid item>\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"sortSelectLabel\" htmlFor=\"sortBy-input\">\n            SORT BY\n          </InputLabel>\n          <Select\n            native\n            autoWidth\n            value={sortBy}\n            onChange={handleChange(\"sortBy\")}\n            inputProps={{\n              name: \"sortBy\",\n              id: \"sortBy-input\"\n            }}\n          >\n            <option value=\"\" />\n            <option value={10}>Ten</option>\n            <option value={20}>Twenty</option>\n            <option value={30}>Thirty</option>\n          </Select>\n        </FormControl>\n      </Grid>\n    </Grid>\n  );\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12}>\n        {renderFeaturedSortBar()}\n      </Grid>\n      <Grid item xs={12}>\n        {renderJobsFeed()}\n      </Grid>\n    </Grid>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  featuredText: {\n    margin: theme.spacing(1),\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport default withRouter(JobsFeed);\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport \"./CompanyBar.css\";\n\nimport backgroundImage from \"../../images/companybar_background.jpeg\";\nimport { Typography, Grid, Fab } from \"@material-ui/core\";\n\nimport GradientButton from \"../Buttons/GradientButton\";\n\nconst CompanyBar = ({ history }) => {\n  const classes = useStyles();\n\n  const navigateTo = path => history.push(`/${path}`);\n\n  return (\n    <Grid\n      container\n      id=\"companyBar\"\n      justify=\"space-between\"\n      alignContent=\"center\"\n      style={{ backgroundImage: `url(${backgroundImage})` }}\n    >\n      <Grid item xs={12} sm={6} md={4} className={classes.innerBox}>\n        <Grid container direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h3\">BUTTERFLY</Typography>\n            <Typography variant=\"h6\">Your Freedom Starts Here!</Typography>\n            <Typography variant=\"caption\">\n              Work from anywhere for the best companies in the world.\n            </Typography>\n          </Grid>\n          <Grid item className={classes.postJobButton}>\n            <GradientButton\n              onClick={() => navigateTo(\"post-a-job\")}\n              size=\"medium\"\n              labelName=\"postAJob\"\n              text=\"Post a Job\"\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  innerBox: {\n    margin: theme.spacing(6),\n    marginLeft: theme.spacing(20),\n    \"@media (max-width: 650px)\": {\n      marginLeft: theme.spacing(6)\n    }\n  },\n  postJobButton: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport default withRouter(CompanyBar);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport \"./Dashboard.css\";\n\nimport GradientButton from \"../Buttons/GradientButton\";\nimport colors from \"../../constants/colors\";\n\nconst createData = (id, jobId, appliedFor, company, dateApplied, status) => {\n  return {\n    id,\n    jobId,\n    appliedFor,\n    company,\n    dateApplied,\n    status\n  };\n};\n\nconst rows = [\n  createData(\n    \"ID1\",\n    \"jobID\",\n\n    \"React native Engineer\",\n    \"Apple\",\n    1466769957914,\n    \"Checked\"\n  ),\n\n  createData(\n    \"ID6\",\n    \"jobID\",\n    \"Angular1  Engineer\",\n    \"Microsoft\",\n    1466367947914,\n    \"Unchecked\"\n  ),\n  createData(\n    \"ID16\",\n    \"jobID\",\n    \"Angular  Engineer\",\n    \"Microsoft\",\n    1466367967914,\n    \"Unchecked\"\n  ),\n  createData(\n    \"ID11\",\n    \"jobID\",\n    \"Airnbn  Engineer\",\n    \"Microsoft\",\n    1466267967914,\n    \"Unchecked\"\n  ),\n  createData(\n    \"ID22\",\n    \"jobID\",\n    \"Blahblah  Engineer\",\n    \"Microsoft\",\n    1466667967914,\n    \"Unchecked\"\n  ),\n\n  createData(\n    \"ID3\",\n    \"jobID\",\n    \"Swift Engineer\",\n    \"SpaceX\",\n    1466761737914,\n    \"Checked\"\n  )\n];\n\nconst convertTimestamp = unix_timestamp => {\n  const months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ];\n  const date = new Date(unix_timestamp * 1000).getDate();\n  const month = months[new Date(unix_timestamp * 1000).getMonth()];\n  const newDate = `${date} ${month}`;\n\n  return newDate;\n};\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headCells = [\n  {\n    id: \"appliedFor\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Applied for\"\n  },\n  { id: \"company\", numeric: false, disablePadding: true, label: \"Company\" },\n  {\n    id: \"dateApplied\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Date Applied\"\n  },\n  { id: \"status\", numeric: false, disablePadding: true, label: \"Status\" },\n  { id: \"resume\", numeric: false, disablePadding: true, label: \"Resume\" }\n];\n\nfunction EnhancedTableHead(props) {\n  const innerClasses = useTableHeadStyles();\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow className={innerClasses.rowName}>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all candidates\" }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={\"left\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n            className={innerClasses.rowName}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={order}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useTableHeadStyles = makeStyles(theme => ({\n  rowName: {\n    fontSize: \"1rem\",\n    color: colors.purple\n  }\n}));\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Dashboard\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : null\n      //   <Tooltip title=\"Filter list\">\n      //     <IconButton aria-label=\"filter list\">\n      //       <FilterListIcon />\n      //     </IconButton>\n      //   </Tooltip>\n      }\n    </Toolbar>\n  );\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark\n        },\n  title: {\n    flex: \"1 1 100%\"\n  }\n}));\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"dateApplied\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === \"desc\";\n    setOrder(isDesc ? \"asc\" : \"desc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.id);\n\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.id);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      className={classes.hoverRow}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.id}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          onClick={event => handleClick(event, row.id)}\n                          checked={isItemSelected}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"left\"\n                        style={{ padding: \"1.2em\" }}\n                      >\n                        {row.appliedFor}\n                      </TableCell>\n\n                      <TableCell align=\"left\">{row.company}</TableCell>\n\n                      <TableCell align=\"left\">\n                        {convertTimestamp(row.dateApplied)}\n                      </TableCell>\n                      <TableCell\n                        align=\"left\"\n                        className={\n                          row.status === \"Checked\"\n                            ? classes.resumeChecked\n                            : classes.resumeUnchecked\n                        }\n                      >\n                        {row.status}\n                      </TableCell>\n                      <TableCell align=\"left\">\n                        {\" \"}\n                        <GradientButton\n                          size=\"small\"\n                          text=\"Download\"\n                          onClick={() => console.log(\"download\")}\n                        />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Minimize View\"\n      />\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    margin: theme.spacing(3)\n  },\n  paper: {\n    width: \"max-content\",\n    marginBottom: theme.spacing(2),\n    boxShadow: \"0 0 10px 0px rgba(107, 19, 107, 0.3)\"\n  },\n  table: {\n    minWidth: 750\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1\n  },\n  resumeChecked: {\n    color: \"#00c853\"\n  },\n  resumeUnchecked: {\n    color: \"#f44336\"\n  },\n  hoverRow: {\n    \"&:hover\": {\n      transform: \"translateZ(50px)\",\n      boxShadow: \"0 0 10px 0px rgba(107, 19, 107, 0.3)\"\n    }\n  }\n}));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport \"./Dashboard.css\";\n\nimport GradientButton from \"../Buttons/GradientButton\";\nimport colors from \"../../constants/colors\";\n\nconst createData = (\n  candidateName,\n  appliedFor,\n  company,\n  contactNumber,\n  email,\n  status\n) => {\n  return {\n    candidateName,\n    appliedFor,\n    company,\n    contactNumber,\n    email,\n    status\n  };\n};\n\nconst rows = [\n  createData(\n    \"Brandon Doe\",\n    \"React native Engineer\",\n    \"Apple\",\n    \"+12053406600\",\n    \"email@email.com\",\n    \"Checked\"\n  ),\n\n  createData(\n    \"Jessica Neon\",\n    \"Angular  Engineer\",\n    \"Microsoft\",\n    \"+1605890669\",\n    \"new@email.com\",\n    \"Unchecked\"\n  ),\n\n  createData(\n    \"Emma Berry\",\n    \"Swift Engineer\",\n    \"SpaceX\",\n    \"+13053789009\",\n    \"mehere@email.com\",\n    \"Checked\"\n  )\n];\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headCells = [\n  {\n    id: \"candidateName\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Candidate Name\"\n  },\n  {\n    id: \"appliedFor\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Applied for\"\n  },\n  { id: \"company\", numeric: false, disablePadding: true, label: \"Company\" },\n  {\n    id: \"contactNumber\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Contact No.\"\n  },\n  { id: \"email\", numeric: false, disablePadding: true, label: \"Email\" },\n  { id: \"status\", numeric: false, disablePadding: true, label: \"Status\" },\n  { id: \"resume\", numeric: false, disablePadding: true, label: \"Resume\" }\n];\n\nfunction EnhancedTableHead(props) {\n  const innerClasses = useTableHeadStyles();\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow className={innerClasses.rowName}>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all candidates\" }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={\"left\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n            className={innerClasses.rowName}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={order}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useTableHeadStyles = makeStyles(theme => ({\n  rowName: {\n    fontSize: \"1rem\",\n    color: colors.purple\n  }\n}));\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Dashboard\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : null\n      //   <Tooltip title=\"Filter list\">\n      //     <IconButton aria-label=\"filter list\">\n      //       <FilterListIcon />\n      //     </IconButton>\n      //   </Tooltip>\n      }\n    </Toolbar>\n  );\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark\n        },\n  title: {\n    flex: \"1 1 100%\"\n  }\n}));\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === \"desc\";\n    setOrder(isDesc ? \"asc\" : \"desc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.candidateName);\n\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.candidateName);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      className={classes.hoverRow}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.candidateName}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          onClick={event =>\n                            handleClick(event, row.candidateName)\n                          }\n                          checked={isItemSelected}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                        align=\"left\"\n                        style={{ padding: \"1.2em\" }}\n                      >\n                        {row.candidateName}\n                      </TableCell>\n                      <TableCell align=\"left\">{row.appliedFor}</TableCell>\n                      <TableCell align=\"left\">{row.company}</TableCell>\n                      <TableCell align=\"left\">{row.contactNumber}</TableCell>\n                      <TableCell align=\"left\">{row.email}</TableCell>\n                      <TableCell\n                        align=\"left\"\n                        className={\n                          row.status === \"Checked\"\n                            ? classes.resumeChecked\n                            : classes.resumeUnchecked\n                        }\n                      >\n                        {row.status}\n                      </TableCell>\n                      <TableCell align=\"left\">\n                        {\" \"}\n                        <GradientButton\n                          size=\"small\"\n                          text=\"Download\"\n                          onClick={() => console.log(\"download\")}\n                        />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Minimize View\"\n      />\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n    flexGrow: 1,\n    overflow: \"scroll\"\n  },\n  paper: {\n    width: \"max-content\",\n    marginBottom: theme.spacing(2),\n    boxShadow: \"0 0 10px 0px rgba(107, 19, 107, 0.3)\"\n  },\n  table: {\n    minWidth: 750\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1\n  },\n  resumeChecked: {\n    color: \"#00c853\"\n  },\n  resumeUnchecked: {\n    color: \"#f44336\"\n  },\n  hoverRow: {\n    \"&:hover\": {\n      transform: \"translateZ(50px)\",\n      boxShadow: \"0 0 10px 0px rgba(107, 19, 107, 0.3)\"\n    }\n  }\n}));\n","import React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport JobSearchDashboard from \"./JobSearchDashboard\";\nimport HiringDashboard from \"./HiringDashboard\";\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const [user, setUser] = useState(\"employee\");\n\n  const renderDashboard = () => {\n    if (user === \"employee\") {\n      return <JobSearchDashboard />;\n    }\n    if (user === \"employer\") {\n      return <HiringDashboard />;\n    }\n  };\n\n  return (\n    <Grid container justify=\"center\" alignContent=\"center\">\n      <div className={classes.root}>{renderDashboard()}</div>\n    </Grid>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"@media (max-width: 780px)\": {\n      overflow: \"scroll\"\n    }\n  }\n}));\n\nexport default Dashboard;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst Policies = ({ open, handleClose }) => {\n  const descriptionElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (open) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        scroll=\"paper\"\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\">\n          Terms & Privacy / Cookie Policy\n        </DialogTitle>\n        <DialogContent dividers={true}>\n          <DialogContentText\n            id=\"scroll-dialog-description\"\n            ref={descriptionElementRef}\n            tabIndex={-1}\n          >\n            Web Site Terms and Conditions of Use 1. Terms By accessing this web\n            site, you are agreeing to be bound by these web site Terms and\n            Conditions of Use, all applicable laws and regulations, and agree\n            that you are responsible for compliance with any applicable local\n            laws. If you do not agree with any of these terms, you are\n            prohibited from using or accessing this site. The materials\n            contained in this web site are protected by applicable copyright and\n            trade mark law. 2. Use License Permission is granted to temporarily\n            download one copy of the materials (information or software) on\n            Butterflyremote.com or Butterflyremotejobs.com’s web site for\n            personal, non-commercial transitory viewing only. This is the grant\n            of a license, not a transfer of title, and under this license you\n            may not: modify or copy the materials; use the materials for any\n            commercial purpose, or for any public display (commercial or\n            non-commercial); attempt to decompile or reverse engineer any\n            software contained on Butterflyremote.com or\n            Butterflyremotejobs.com’s web site; remove any copyright or other\n            proprietary notations from the materials; or transfer the materials\n            to another person or “mirror” the materials on any other server.\n            This license shall automatically terminate if you violate any of\n            these restrictions and may be terminated by Butterflyremote.com or\n            Butterflyremotejobs.com at any time. Upon terminating your viewing\n            of these materials or upon the termination of this license, you must\n            destroy any downloaded materials in your possession whether in\n            electronic or printed format. 3. Disclaimer The materials on\n            Butterflyremote.com or Butterflyremotejobs.com’s web site are\n            provided “as is”. Butterflyremote.com or Butterflyremotejobs.com\n            makes no warranties, expressed or implied, and hereby disclaims and\n            negates all other warranties, including without limitation, implied\n            warranties or conditions of merchantability, fitness for a\n            particular purpose, or non-infringement of intellectual property or\n            other violation of rights. Further, Butterflyremote.com or\n            Butterflyremotejobs.com does not warrant or make any representations\n            concerning the accuracy, likely results, or reliability of the use\n            of the materials on its Internet web site or otherwise relating to\n            such materials or on any sites linked to this site. 4. Limitations\n            In no event shall Butterflyremote.com or Butterflyremotejobs.com or\n            its suppliers be liable for any damages (including, without\n            limitation, damages for loss of data or profit, or due to business\n            interruption,) arising out of the use or inability to use the\n            materials on Butterflyremote.com or Butterflyremotejobs.com’s\n            Internet site, even if Butterflyremote.com or\n            Butterflyremotejobs.com or a Butterflyremote.com or\n            Butterflyremotejobs.com authorized representative has been notified\n            orally or in writing of the possibility of such damage. Because some\n            jurisdictions do not allow limitations on implied warranties, or\n            limitations of liability for consequential or incidental damages,\n            these limitations may not apply to you. 5. Revisions and Errata The\n            materials appearing on Butterflyremote.com or\n            Butterflyremotejobs.com’s web site could include technical,\n            typographical, or photographic errors. Butterflyremote.com or\n            Butterflyremotejobs.com does not warrant that any of the materials\n            on its web site are accurate, complete, or current.\n            Butterflyremote.com or Butterflyremotejobs.com may make changes to\n            the materials contained on its web site at any time without notice.\n            Butterflyremote.com or Butterflyremotejobs.com does not, however,\n            make any commitment to update the materials. 6. Links\n            Butterflyremote.com or Butterflyremotejobs.com has not reviewed all\n            of the sites linked to its Internet web site and is not responsible\n            for the contents of any such linked site. The inclusion of any link\n            does not imply endorsement by Butterflyremote.com or\n            Butterflyremotejobs.com of the site. Use of any such linked web site\n            is at the user’s own risk. 7. Site Terms of Use Modifications\n            Butterflyremote.com or Butterflyremotejobs.com may revise these\n            terms of use for its web site at any time without notice. By using\n            this web site you are agreeing to be bound by the then current\n            version of these Terms and Conditions of Use. 8. Governing Law Any\n            claim relating to Butterflyremote.com or Butterflyremotejobs.com’s\n            web site shall be governed by the laws of the State of Delaware\n            without regard to its conflict of law provisions. General Terms and\n            Conditions applicable to Use of a Web Site. Privacy Policy Your\n            privacy is very important to us. Accordingly, we have developed this\n            Policy in order for you to understand how we collect, use,\n            communicate and disclose and make use of personal information. The\n            following outlines our privacy policy. Before or at the time of\n            collecting personal information, we will identify the purposes for\n            which information is being collected. We will collect and use of\n            personal information solely with the objective of fulfilling those\n            purposes specified by us and for other compatible purposes, unless\n            we obtain the consent of the individual concerned or as required by\n            law. We will only retain personal information as long as necessary\n            for the fulfillment of those purposes. We will collect personal\n            information by lawful and fair means and, where appropriate, with\n            the knowledge or consent of the individual concerned. Personal data\n            should be relevant to the purposes for which it is to be used, and,\n            to the extent necessary for those purposes, should be accurate,\n            complete, and up-to-date. We will protect personal information by\n            reasonable security safeguards against loss or theft, as well as\n            unauthorized access, disclosure, copying, use or modification. We\n            will make readily available to customers information about our\n            policies and practices relating to the management of personal\n            information. We are committed to conducting our business in\n            accordance with these principles in order to ensure that the\n            confidentiality of personal information is protected and maintained.\n            We use cookies and other similar technologies to improve your\n            browsing experience and the functionality of our site. By clicking\n            Agree you agreed to all conditions otherwise you must not use the\n            website.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Agree & Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default Policies;\n","import React from \"react\";\nimport { firestore } from \"firebase/app\";\nimport \"firebase/firestore\";\nimport {\n  Grid,\n  Paper,\n  Button,\n  Typography,\n  TextField,\n  Box,\n  IconButton,\n  Link,\n  CircularProgress,\n  Grow,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\n\nimport { Helmet } from \"react-helmet\";\n\nimport GradientButton from \"../Buttons/GradientButton\";\nimport Policies from \"./Policies\";\nimport logo from \"../../images/logoFull.webp\";\n\nimport { emailRegex } from \"../utils/regex\";\n\nimport background from \"../../images/pre-subscription.webp\";\nimport colors from \"../../constants/colors\";\nimport shadows from \"../../constants/shadows\";\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"#\">\n        Butterfly Remote Jobs. Digital Solution LLC\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"} All rights Reserved\n    </Typography>\n  );\n};\n\nconst Subscribe = () => {\n  const db = firestore();\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(true);\n  const [amountOfSubscriptions, setAmountOfSubscriptions] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [invalidEmail, setInvalidEmail] = React.useState(false);\n  const [subscribedSuccessfully, setSubscribedSuccessfully] = React.useState(\n    false\n  );\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const [openPolicy, setOpenPolicy] = React.useState(false);\n\n  const handleClickOpenPolicy = () => {\n    setOpenPolicy(true);\n  };\n\n  const handleClosePolicy = () => {\n    setOpenPolicy(false);\n  };\n\n  React.useEffect(() => {\n    checkIfAgreedToPolicy();\n    getAmountOfSubscriptions();\n  }, []);\n\n  const checkIfAgreedToPolicy = () => {\n    const agreed = localStorage.getItem(\"policies\");\n    if (agreed) {\n      setOpenDialog(false);\n    } else {\n      setOpenDialog(true);\n    }\n  };\n\n  const getAmountOfSubscriptions = () => {\n    db.collection(\"pre-subscription-email-amount\")\n      .doc(\"TerMh096qOi5fAKOOh6A\")\n      .get()\n      .then(doc => {\n        if (doc.exists) {\n          let data = doc.data();\n          setAmountOfSubscriptions(data.numberOfSubscriptions);\n          setLoading(false);\n        } else {\n          // doc.data() will be undefined in this case\n          // console.log(\"No such document!\");\n        }\n      })\n      .catch(function(error) {\n        // console.log(\"Error getting document:\", error);\n      });\n  };\n\n  const subscribe = email => {\n    let validate = emailRegex.test(email.toLowerCase());\n    if (validate === false) {\n      setSubscribedSuccessfully(false);\n      setInvalidEmail(true);\n      return;\n    } else {\n      const increment = firestore.FieldValue.increment(1);\n\n      db.collection(\"pre-subscription-emails\")\n        .doc(email)\n        .get()\n        .then(doc => {\n          if (doc.exists) {\n            return;\n          } else {\n            db.collection(\"pre-subscription-email-amount\")\n              .doc(\"TerMh096qOi5fAKOOh6A\")\n              .update({\n                numberOfSubscriptions: increment\n              })\n              .then(() => setAmountOfSubscriptions(amountOfSubscriptions + 1));\n            db.collection(\"pre-subscription-emails\")\n              .doc(email)\n              .set({\n                email: email\n              });\n          }\n        })\n        .catch(function(error) {\n          // console.log(\"Error getting document:\", error);\n        });\n\n      setSubscribedSuccessfully(true);\n      return;\n    }\n  };\n\n  const handleChange = e => {\n    if (invalidEmail || subscribedSuccessfully) {\n      setSubscribedSuccessfully(false);\n      setInvalidEmail(false);\n    }\n    setEmail(e.target.value);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    localStorage.setItem(\"policies\", true);\n  };\n\n  const renderPolicy = () => (\n    <Policies open={openPolicy} handleClose={handleClosePolicy} />\n  );\n  const renderDialog = () => (\n    <Dialog\n      open={openDialog}\n      onClose={handleCloseDialog}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        {\"Agreement Terms & Privacy / Cookie Policy\"}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          By clicking \"Agree & Accept\" You are agreed to our{\" \"}\n          <span className={classes.hyperlink} onClick={handleClickOpenPolicy}>\n            Terms of Use and Privacy Policy\n          </span>\n          . We use cookies and other similar technologies to improve your\n          browsing experience and the functionality of our site. By clicking\n          \"Agree & Accept\" you consent to the storing on your device of all the\n          technologies described in our{\" \"}\n          <span className={classes.hyperlink} onClick={handleClickOpenPolicy}>\n            Cookie Policy\n          </span>\n          \".\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={handleCloseDialog}\n          className={classes.dialogButton}\n          autoFocus\n        >\n          Agree & Accept\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n\n  return (\n    <React.Fragment>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Subscribe to Butterfly Remote Jobs</title>\n        <meta\n          name=\"description\"\n          content=\"Best place to find remote work. Best place to hire.\"\n        />\n        <link rel=\"canonical\" href=\"https://butterflyremote.com\" />\n      </Helmet>\n      <Grid\n        container\n        justify=\"center\"\n        alignContent=\"center\"\n        className={classes.root}\n      >\n        {renderPolicy()}\n        {renderDialog()}\n        <Grid item xs={12} sm={12} md={8} lg={6}>\n          <Paper className={classes.paper}>\n            <Grid container direction=\"column\">\n              <Box textAlign=\"center\">\n                <img\n                  className={classes.logoImg}\n                  alt=\"Butterfly remote\"\n                  src={logo}\n                ></img>\n\n                <Typography variant=\"h6\" className={classes.description}>\n                  Are you looking to hire the best talent? Or you are the talent\n                  who is looking for remote opportunities?\n                  {/* Make a step in the\n                future with the Butterfly Remote platform, which connects best\n                companies to work for with the most exceptional talents who\n                deserve to get a job of their dream.  */}{\" \"}\n                  Please subscribe to be notified once we launch. Don't miss the\n                  chance to get the most out of our platform!\n                </Typography>\n              </Box>\n\n              <Box textAlign=\"center\" className={classes.subscribeBoxField}>\n                <Box style={{ minHeight: 30 }}>\n                  <Grow in={subscribedSuccessfully}>\n                    <Typography\n                      variant=\"h5\"\n                      className={classes.captionCommentThankYou}\n                    >\n                      {subscribedSuccessfully &&\n                        \"Thank you! We will notify you once our platform is ready to go.\"}\n                    </Typography>\n                  </Grow>\n                  <Grow in={invalidEmail}>\n                    <Typography\n                      variant=\"body1\"\n                      className={classes.captionCommentInvalidEmail}\n                    >\n                      {invalidEmail && \"Please enter a valid email address.\"}\n                    </Typography>\n                  </Grow>\n                </Box>\n\n                <TextField\n                  variant=\"standard\"\n                  margin=\"normal\"\n                  fullWidth\n                  name=\"email\"\n                  label=\"Enter you email address\"\n                  type=\"email\"\n                  id=\"email\"\n                  autoComplete=\"email\"\n                  onChange={e => handleChange(e)}\n                />\n              </Box>\n\n              <Box textAlign=\"center\">\n                <GradientButton\n                  text=\"Subscribe\"\n                  labelName=\"subscribe\"\n                  size=\"large\"\n                  onClick={() => subscribe(email)}\n                />\n              </Box>\n              <Grid item xs={12}>\n                <Grid container justify=\"center\">\n                  <Box textAlign=\"center\" className={classes.subscribeBoxField}>\n                    <Typography variant=\"h5\" color=\"textSecondary\">\n                      Total Subscribers\n                    </Typography>\n                    <Box\n                      border={1}\n                      borderRadius={16}\n                      className={classes.subscribersAmountBoxField}\n                    >\n                      <Typography\n                        variant=\"h2\"\n                        className={classes.subscribersAmountText}\n                      >\n                        {!loading ? (\n                          amountOfSubscriptions.toString()\n                        ) : (\n                          <CircularProgress color=\"secondary\" />\n                        )}\n                      </Typography>\n                    </Box>\n                  </Box>\n                </Grid>\n              </Grid>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignContent=\"center\"\n              >\n                <a\n                  href=\"https://www.facebook.com/butterflyremote\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <IconButton aria-label=\"facebook\" className={classes.margin}>\n                    <FacebookIcon className={classes.icon} />\n                  </IconButton>\n                </a>\n\n                <a\n                  href=\"https://www.linkedin.com/company/butterflyremote\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <IconButton aria-label=\"linkedin\" className={classes.margin}>\n                    <LinkedInIcon className={classes.icon} />\n                  </IconButton>\n                </a>\n\n                <a\n                  href=\"https://www.instagram.com/butterflyremote\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <IconButton aria-label=\"instagram\" className={classes.margin}>\n                    <InstagramIcon className={classes.icon} />\n                  </IconButton>\n                </a>\n              </Grid>\n              <Box textAlign=\"center\">{Copyright()}</Box>\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: \"100vh\",\n    backgroundImage: `url(${background})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    \"@media (max-width: 420px)\": {\n      height: \"auto\"\n    },\n    \"@media (max-height: 820px)\": {\n      height: \"auto\"\n    }\n  },\n  paper: {\n    padding: theme.spacing(4),\n    \"@media (max-width: 960px)\": {\n      margin: theme.spacing(1),\n      padding: theme.spacing(2)\n    },\n    boxShadow: \"0 0 400px 0px rgba(70, 9, 125, 0.53)\"\n  },\n  captionCommentThankYou: {\n    color: colors.purple\n  },\n  captionCommentInvalidEmail: {\n    color: \"red\"\n  },\n  subscribeBoxField: {\n    padding: theme.spacing(5),\n    \"@media (max-width: 650px)\": {\n      padding: theme.spacing(2),\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }\n  },\n  subscribersAmountBoxField: {\n    margin: theme.spacing(2),\n    padding: theme.spacing(2),\n    borderColor: colors.purple,\n    boxShadow: shadows.purpleShadow\n  },\n  subscribersAmountText: {\n    color: colors.purple\n  },\n  margin: {\n    margin: theme.spacing(2)\n  },\n  logoImg: {\n    margin: theme.spacing(3),\n    width: \"auto\",\n    height: 250,\n    \"@media (max-width: 650px)\": {\n      width: \"auto\",\n      height: 150\n    }\n  },\n  icon: {\n    fontSize: \"2rem\",\n    \"&:hover\": {\n      color: colors.purple\n    }\n  },\n  dialogButton: {\n    color: colors.purple\n  },\n  hyperlink: {\n    textDecoration: \"underline\",\n    cursor: \"pointer\"\n  }\n}));\n\nexport default Subscribe;\n","import React from \"react\";\nimport { Container, Box, Typography } from \"@material-ui/core\";\n\nconst NoMatch = () => {\n  return (\n    <Container>\n      <Box textAlign=\"center\">\n        <Typography>404 PAGE DOES NOT EXISTS</Typography>\n      </Box>\n    </Container>\n  );\n};\n\nexport default NoMatch;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container } from \"@material-ui/core\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Fab from \"@material-ui/core/Fab\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport ScrollToTheTop from \"./ScrollToTheTop\";\n\nimport Navbar from \"./Navbar/Navbar\";\nimport Footer from \"./Footer/Footer\";\nimport ProfileForm from \"./Forms/ProfileForm/ProfileForm\";\nimport JobDescriptionPage from \"./JobDescriptionPage/JobDescriptionPage\";\nimport SignIn from \"./Auth/SignIn/SignIn\";\nimport SignUp from \"./Auth/SignUp/SignUp\";\nimport PostJobForm from \"./Forms/PostJobFormGroup/PostJobForm\";\nimport JobsFeed from \"./JobsFeed/JobsFeed\";\nimport CompanyBar from \"./CompanyBar/CompanyBar\";\nimport Dashboard from \"./Dashboard/Dashboard\";\nimport Subscribe from \"./Pre-subscription/Subscribe\";\nimport NoMatch from \"./NoMatch\";\n\nimport { jobs } from \"../MockUpData/jobs\";\nimport colors from \"../constants/colors\";\n\nconst Content = props => {\n  const classes = useStyles();\n\n  return (\n    <Router>\n      <div className={classes.root}>\n        {/* <CssBaseline />\n        <Toolbar id=\"back-to-top-anchor\" /> */}\n        {/* <Navbar /> */}\n        <Switch>\n          <Route path=\"/\">\n            <Subscribe />\n          </Route>\n\n          {/* <Route exact path=\"/\">\n            <CompanyBar />\n            <Container component=\"main\" className={classes.main}>\n              <JobsFeed jobs={jobs} />\n            </Container>\n          </Route>\n\n          <Route path=\"/profile\">\n            <ProfileForm />\n          </Route>\n          <Route path=\"/job-description/:id\">\n            <JobDescriptionPage />\n          </Route>\n\n          <Route path=\"/post-a-job\">\n            <PostJobForm />\n          </Route>\n\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n\n          <Route path=\"/sign-in\">\n            <SignIn />\n          </Route>\n\n          <Route path=\"/sign-up\">\n            <SignUp />\n          </Route> */}\n          <Route component={NoMatch} />\n        </Switch>\n\n        {/* <ScrollToTheTop {...props}>\n          <Fab\n            color=\"secondary\"\n            size=\"small\"\n            aria-label=\"scroll back to top\"\n            className={classes.scrollToTheTop}\n          >\n            <KeyboardArrowUpIcon />\n          </Fab>\n        </ScrollToTheTop> */}\n      </div>\n      {/* <Footer /> */}\n    </Router>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\"\n  },\n  main: {\n    flex: 1,\n    marginBottom: theme.spacing(2)\n  },\n  scrollToTheTop: {\n    backgroundColor: colors.purple\n  }\n}));\n\nexport default Content;\n","import React from \"react\";\nimport {\n  createMuiTheme,\n  makeStyles,\n  ThemeProvider,\n  responsiveFontSizes\n} from \"@material-ui/core/styles\";\nimport { orange, purple } from \"@material-ui/core/colors\";\nimport Content from \"./Components/Content\";\nimport \"./App.css\";\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: purple\n  },\n  status: {\n    danger: orange[500]\n  },\n  typography: {}\n});\n\ntheme = responsiveFontSizes(theme);\n\nconst App = props => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Content />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const devConfig = {\n  apiKey: \"AIzaSyDKxqv3DE-7oo2GN9rLySU-nWZ1NcVmu18\",\n  authDomain: \"butterfly-remote-jobs-dev.firebaseapp.com\",\n  databaseURL: \"https://butterfly-remote-jobs-dev.firebaseio.com\",\n  projectId: \"butterfly-remote-jobs-dev\",\n  storageBucket: \"butterfly-remote-jobs-dev.appspot.com\",\n  messagingSenderId: \"562843067605\",\n  appId: \"1:562843067605:web:cdec99787765f1755cae5c\",\n  measurementId: \"G-3LQKV2HFE4\"\n};\n\n//change for production config later\nconst prodConfig = {\n  apiKey: \"AIzaSyChVzdgU5iTC9BU8nxdpRxVe0wW-kwjeUw\",\n  authDomain: \"butterfly-remote-jobs-prod.firebaseapp.com\",\n  databaseURL: \"https://butterfly-remote-jobs-prod.firebaseio.com\",\n  projectId: \"butterfly-remote-jobs-prod\",\n  storageBucket: \"butterfly-remote-jobs-prod.appspot.com\",\n  messagingSenderId: \"889926117816\",\n  appId: \"1:889926117816:web:842ac538dcf9916671074d\",\n  measurementId: \"G-Q1EVDDP7HN\"\n};\n\nconst config = process.env.NODE_ENV === \"production\" ? prodConfig : devConfig;\n\nexport default config;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport config from \"./firebaseConfig\";\n// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport { initializeApp, analytics } from \"firebase/app\";\nimport \"firebase/analytics\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n// import \"firebase/storage\";\ninitializeApp(config);\nanalytics();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.3fc9ea24.png\";","module.exports = __webpack_public_path__ + \"static/media/signUpInBackground.bc05de1b.jpeg\";"],"sourceRoot":""}